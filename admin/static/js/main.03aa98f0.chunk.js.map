{"version":3,"sources":["Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Components/TreeTable.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","onAliveChanged","id","state","adapterName","instance","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","this","subscribeState","unsubscribeState","pass","length","match","I18n","t","title","attr","type","error","checkPassword","native","TextField","label","className","classes","input","value","helperText","onChange","e","target","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","style","textAlign","Button","variant","size","color","onClick","window","open","focus","amazonAlexa","onDebug","opacity","debugVisible","onMouseEnter","onMouseLeave","sendTo","data","file","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","forceUserCreate","ack","Promise","resolve","getObject","obj","common","enabled","setObject","catch","err","onError","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","onLoad","clsx","column","columnSettings","renderInput","renderCheckbox","marginTop","googleHome","newVal","changed","hintUnsaved","button","disabled","resetCerts","startIcon","fontWeight","columnLogo","renderCard","renderToast","Component","withStyles","theme","width","minHeight","minWidth","marginRight","marginBottom","maxWidth","height","display","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","adminInstances","webInstances","getAdapterInstances","filter","item","auth","map","name","_id","split","pop","noTranslation","unshift","options","FormControl","paddingRight","Select","Input","MenuItem","FormHelperText","imagePrefix","selected","types","onOk","renderSelect","Fab","marginLeft","getSelectIdDialog","remote","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","list","nsList","replace","key","showError","chips","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","encodeURIComponent","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","padding","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","parse","i","find","smartName","getSmartNameFromObj","noCommon","disableSmartName","removeSmartName","addChanged","informInstance","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","DialogTitle","DialogContent","autoFocus","DialogActions","changeSmartName","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","colorOn","colorOff","colorSet","colorRead","CHANGED_COLOR","DEFAULT_CHANNEL_COLOR_DARK","DEFAULT_CHANNEL_COLOR_LIGHT","LAST_CHANGED_COLOR_DARK","LAST_CHANGED_COLOR_LIGHT","actionsMapping","turnOn","icon","IconOn","desc","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","toString","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","result","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","el","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","getActualTemperature","getActualHumidity","IconHumidity","getMotion","IconMotion","getContact","IconContact","AlisaDevices","includes","iobID","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","getAttr","lookup","shift","setAttr","descendingComparator","orderBy","_a","_b","TreeTable","opened","localStorage","getItem","Array","isArray","editMode","deleteMode","editData","order","columns","field","col","level","editable","TableCell","cell","cellSecondary","cellStyle","component","v","parentId","children","it","TableRow","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","scope","ii","renderCell","cellButton","newData","onUpdate","renderLine","property","isAsc","TableHead","cellHeader","sortDirection","TableSortLabel","active","direction","handleRequestSort","visuallyHidden","table","array","comparator","stabilizedThis","index","stableSort","getComparator","tableContainer","Table","stickyHeader","renderHead","TableBody","React","paddingBottom","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","clip","GoogleSmartNames","myTableRef","createRef","expertMode","helpHidden","searchText","helpHeight","editComponent","rows","resize","helpRef","oldData","displayTraits","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","desktop","innerHeight","innerWidth","smallDisplay","manualModeHint","ref","flex","Toolbar","hideHelp","setItem","prevProps","prevState","snapshot","current","h","clientHeight","defaultNames","renderToolbar","renderInstructions","onGHParamsChange","smartEnum","useMediaQuery","App","extendedProps","encryptedFields","translations","require","sentryDSN","showAckTempPasswordDialog","selectedTab","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","scrollButtons","Tab","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","build","ReactDOM","render","onThemeChange","_theme","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03aa98f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n        };\r\n\r\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    checkPassword(pass) {\r\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\r\n            return I18n.t('invalid_password_warning');\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    renderInput(title, attr, type) {\r\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\r\n        return <TextField\r\n            label={ I18n.t(title) }\r\n            error={ !!error  }\r\n            className={ this.props.classes.input }\r\n            value={ this.props.native[attr] }\r\n            type={ type || 'text' }\r\n            helperText={ error || '' }\r\n            onChange={ e => this.props.onChange(attr, e.target.value) }\r\n            margin=\"normal\"\r\n        />;\r\n    }\r\n\r\n    renderCard() {\r\n        return <Card className={this.props.classes.card}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={this.props.classes.media}\r\n                    image=\"alexalogo.png\"\r\n                    title=\"Alexa logo\"\r\n                />\r\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\r\n            </CardActionArea>\r\n            <CardActions style={{textAlign: 'center'}} >\r\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\r\n                    const win = window.open('https://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\r\n                    win.focus();\r\n                }}>{I18n.t('Review')}</Button>\r\n                {this.props.native.amazonAlexa ?\r\n                    <Button\r\n                        title=\"Debug\"\r\n                        onClick={() => this.onDebug()}\r\n                        style={{opacity: this.state.debugVisible ? 1 : 0}}\r\n                        onMouseEnter={() => this.setState({debugVisible: true})}\r\n                        onMouseLeave={() => this.setState({debugVisible: false})}\r\n                    >Debug</Button> : null}\r\n            </CardActions>\r\n        </Card>;\r\n    }\r\n\r\n    onDebug() {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'debug', null)\r\n            .then(data => {\r\n                const file = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});\r\n                if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n                    window.navigator.msSaveOrOpenBlob(file, 'debug.json');\r\n                else { // Others\r\n                    const a = document.createElement('a');\r\n                    const url = URL.createObjectURL(file);\r\n                    a.href = url;\r\n                    a.download = 'debug.json';\r\n                    document.body.appendChild(a);\r\n                    a.click();\r\n\r\n                    setTimeout(() => {\r\n                        document.body.removeChild(a);\r\n                        window.URL.revokeObjectURL(url);\r\n                    }, 0);\r\n                }\r\n            });\r\n    }\r\n\r\n    resetCerts(forceUserCreate) {\r\n        this.setState({ inAction: true });\r\n\r\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\r\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\r\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\r\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\r\n            .then(() => {\r\n                if (forceUserCreate) {\r\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\r\n                } else {\r\n                    return Promise.resolve();\r\n                }\r\n            })\r\n            // read actual instance object\r\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\r\n            .then(obj => {\r\n                if (!obj || !obj.common || !obj.common.enabled) {\r\n                    // adapter is disabled, do not restart it\r\n                    return Promise.resolve();\r\n                } else {\r\n                    // restart adapter\r\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\r\n                }\r\n            })\r\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\r\n            .catch(err => this.props.onError(err))\r\n            .then(() => this.setState({inAction: false}));\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n        return <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={true}\r\n            autoHideDuration={6000}\r\n            onClose={() => this.setState({toast: ''})}\r\n            ContentProps={{\r\n                'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{this.state.toast}</span>}\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={this.props.classes.close}\r\n                    onClick={() => this.setState({toast: ''})}\r\n                >\r\n                    <IconClose />\r\n                </IconButton>,\r\n            ]}\r\n        />;\r\n    }\r\n\r\n    renderCheckbox(title, attr, style) {\r\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\r\n              control={\r\n                  <Checkbox\r\n                      checked={this.props.native[attr]}\r\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\r\n                      color=\"primary\"\r\n                  />\r\n              }\r\n              label={I18n.t(title)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                classes={{}}\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings) }>\r\n                { this.renderInput('ioBroker.pro Login', 'login') }<br/>\r\n                { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\r\n                { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\r\n                <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\r\n                                  style={{ marginTop: 5 }}\r\n                    control={\r\n                      <Checkbox\r\n                          checked={this.props.native.googleHome}\r\n                          onChange={() => {\r\n                              // activate alexa if google home is on (temporary)\r\n                              const newVal = !this.props.native.googleHome;\r\n                              this.props.onChange('googleHome', newVal, () =>\r\n                                  newVal && this.props.onChange('amazonAlexa', true));\r\n                          }}\r\n                          color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={I18n.t('Google Home')}\r\n                />\r\n                {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\r\n                <br/>\r\n\r\n                <p>{I18n.t('new_certs_tip')}</p>\r\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\r\n                <Button variant=\"outlined\"\r\n                        className={ this.props.classes.button }\r\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\r\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\r\n                        onClick={ () => this.resetCerts() }\r\n                        startIcon={<IconReload />}\r\n                >\r\n                    { I18n.t('Get new connection certificates') }\r\n                </Button>\r\n\r\n                <p>{I18n.t('new_credentials_tip')}</p>\r\n                {this.props.changed ?\r\n                    <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\r\n                <Button variant=\"outlined\"\r\n                        className={ this.props.classes.button }\r\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\r\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\r\n                        onClick={ () => this.resetCerts(true) }\r\n                        startIcon={<IconReload />}\r\n                >\r\n                    { I18n.t('Create IoT credentials anew') }\r\n                </Button>\r\n                <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\r\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\r\n                <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\r\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\r\n                <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\r\n            </div>\r\n            <div className={clsx(this.props.classes.column, this.props.classes.columnLogo)}>{this.renderCard() }</div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        marginTop: 0,\r\n        minWidth: 400\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n    controlElement: {\r\n        //background: '#d2d2d2',\r\n        marginBottom: 5\r\n    }\r\n});\r\n\r\nclass ExtendedOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showSelectId: false,\r\n            adminInstances: [],\r\n            webInstances: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.getAdapterInstances('admin')\r\n            .then(adminInstances => {\r\n                // filter out instances with authentication\r\n                adminInstances = adminInstances\r\n                    .filter(item => !item.common.auth)\r\n                    .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\r\n\r\n                adminInstances.unshift({title: 'disabled', value: ''});\r\n\r\n                return this.props.socket.getAdapterInstances('web')\r\n                    .then(webInstances => {\r\n                        webInstances = webInstances\r\n                            .filter(item => !item.common.auth)\r\n                            .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\r\n\r\n                        webInstances.unshift({title: 'disabled', value: ''});\r\n\r\n                        this.setState({adminInstances, webInstances});\r\n                    });\r\n            });\r\n    }\r\n\r\n    renderInput(title, attr, type) {\r\n        return <TextField\r\n            label={I18n.t(title)}\r\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\r\n            value={this.props.native[attr]}\r\n            type={type || 'text'}\r\n            onChange={e => this.props.onChange(attr, e.target.value)}\r\n            margin=\"normal\"\r\n        />;\r\n    }\r\n\r\n    renderSelect(title, attr, options, style) {\r\n        return <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={Object.assign({paddingTop: 5, paddingRight: 8}, style)}>\r\n            <Select\r\n                value={this.props.native[attr] || '_'}\r\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\r\n                input={<Input name={attr} id={attr + '-helper'} />}\r\n            >\r\n                {options.map(item => <MenuItem key={'key-' + item.value} value={item.value || '_'}>{item.noTranslation ? item.title : I18n.t(item.title)}</MenuItem>)}\r\n            </Select>\r\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\r\n        </FormControl>;\r\n    }\r\n\r\n    renderCheckbox(title, attr, style) {\r\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\r\n            control={\r\n                <Checkbox\r\n                    checked={this.props.native[attr]}\r\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label={I18n.t(title)}\r\n        />;\r\n    }\r\n\r\n    getSelectIdDialog(attr) {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID2\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={this.props.native[attr]}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={selected => {\r\n                    this.setState({showSelectId: false});\r\n                    this.props.onChange(attr, selected);\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\r\n                {this.renderSelect('Language', 'language', [\r\n                    {title: 'default', value: ''},\r\n                    {title: 'english', value: 'en', noTranslation: true},\r\n                    {title: 'Deutsch', value: 'de', noTranslation: true},\r\n                    {title: 'русский', value: 'ru', noTranslation: true}\r\n                ], {marginTop: 10})}<br/>\r\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\r\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\r\n                {this.renderInput('Replace in names', 'replaces')}<br/>\r\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\r\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\r\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\r\n                </div>\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderInput('Write response to', 'responseOID')}\r\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\r\n                </div>\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\r\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\r\n                </div>\r\n                {this.renderCheckbox('Debug outputs', 'debug')}\r\n                {this.getSelectIdDialog('responseOID')}\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderCheckbox('Allow remote access', 'remote')}\r\n                    {this.props.native.remote ? this.renderSelect('Admin instance', 'remoteAdminInstance', this.state.adminInstances, {width: 120, minWidth: 120}) : null}\r\n                    {this.props.native.remote ? this.renderSelect('Web instance', 'remoteWebInstance', this.state.webInstances, {width: 120, minWidth: 120}) : null}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nExtendedOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExtendedOptions);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\n\r\nimport IconCopy from '@iobroker/adapter-react/icons/IconCopy';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        marginTop: 0,\r\n        minWidth: 400\r\n    },\r\n    fullSize: {\r\n        width: 'calc(100% - 64px)'\r\n    },\r\n    normalSize: {\r\n        width: 'calc(30% - 64px)',\r\n        marginLeft: 10\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n    controlElement: {\r\n        //background: '#d2d2d2',\r\n        marginBottom: 5\r\n    },\r\n    chips: {\r\n        border: '1px solid #DDD',\r\n        borderRadius: 1,\r\n        width: 'calc(100% - 250px)',\r\n        display: 'inline-block',\r\n        padding: 5,\r\n        minHeight: 32,\r\n        marginLeft: 10,\r\n        marginTop: 20\r\n    },\r\n    chip: {\r\n        marginRight: 5\r\n    }\r\n});\r\n\r\nclass Services extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            running: false,\r\n            toast: '',\r\n            showSelectId: false,\r\n            text2commandList: [],\r\n            nightscoutList: [],\r\n            addValue: '',\r\n            isInstanceAlive: false\r\n        };\r\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\r\n\r\n        this.props.socket.getAdapterInstances('text2command')\r\n            .then(list =>\r\n                this.props.socket.getAdapterInstances('nightscout')\r\n                    .then(nsList => this.setState({\r\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\r\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\r\n                    })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\r\n                this.setState({isInstanceAlive: obj && obj.common && state && state.val})));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\r\n    }\r\n\r\n    onKeyChanged(id, state) {\r\n        state && this.setState({key: state.val});\r\n    }\r\n\r\n    renderInput(title, attr, type) {\r\n        return <TextField\r\n            label={I18n.t(title)}\r\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\r\n            value={this.props.native[attr]}\r\n            type={type || 'text'}\r\n            onChange={e => this.props.onChange(attr, e.target.value)}\r\n            margin=\"normal\"\r\n        />;\r\n    }\r\n\r\n    reissueUrlKey() {\r\n        this.setState({running: true});\r\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\r\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\r\n            .then(obj => {\r\n                if (!obj || !obj.common || !obj.common.enabled) {\r\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\r\n                } else {\r\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\r\n                }\r\n            })\r\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\r\n            .catch(err => {\r\n                this.setState({running: false});\r\n                this.props.showError(err);\r\n            });\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onChipsDelete(attr, value) {\r\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\r\n        const pos = chips.indexOf(value);\r\n        if (pos !== -1) {\r\n            chips.splice(pos, 1);\r\n            this.props.onChange(attr, chips.join(' '));\r\n        }\r\n    }\r\n\r\n    onChipsAdd(attr) {\r\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\r\n        const pos = chips.indexOf(this.state.addValue);\r\n        if (pos === -1) {\r\n            chips.push(this.state.addValue);\r\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\r\n        }\r\n    }\r\n\r\n    calcNightscoutSecret() {\r\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\r\n        const secret = this.props.native.nightscoutPass;\r\n        return email + (secret ? '-' + secret : '');\r\n    }\r\n\r\n    getSelectIdDialog(attr) {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID3\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={this.props.native[attr]}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={selected => {\r\n                    this.setState({showSelectId: false});\r\n                    this.props.onChange(attr, selected);\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderChips(label, attr) {\r\n        return <div className={this.props.classes.chipsDiv}>\r\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\r\n            <TextField\r\n                label={I18n.t('Add service')}\r\n                style={{width: 150}}\r\n                type={'text'}\r\n                value={this.state.addValue}\r\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\r\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\r\n                margin=\"normal\"\r\n            />\r\n\r\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\r\n\r\n            <div className={this.props.classes.chips}>\r\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\r\n                .map(word => <Chip\r\n                        key={word}\r\n                        size=\"small\"\r\n                        label={word}\r\n                        onDelete={() => this.onChipsDelete(attr, word)}\r\n                        className={this.props.classes.chip}\r\n                    />)}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        return <form className={this.props.classes.tab}>\r\n            <Button\r\n                variant=\"outlined\"\r\n                disabled={!this.state.isInstanceAlive || this.state.running}\r\n                color=\"primary\"\r\n                title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\r\n                onClick={() => this.reissueUrlKey()}\r\n                startIcon={<IconRefresh />}\r\n            >\r\n                {I18n.t('Get new service URL key')}\r\n            </Button><br/>\r\n\r\n            {this.renderInput('IFTTT key', 'iftttKey')}<br/>\r\n\r\n            <TextField\r\n                style={{marginTop: 10}}\r\n                label={I18n.t('Use following link for IFTTT')}\r\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\r\n                value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\r\n                type=\"text\"\r\n                readOnly={true}\r\n                margin=\"normal\"\r\n            />\r\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\r\n            <br/>\r\n\r\n            {this.renderChips('White list for services', 'allowedServices')}<br/>\r\n\r\n            <TextField\r\n                style={{marginTop: 10}}\r\n                label={I18n.t('Use following link for custom service')}\r\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\r\n                value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\r\n                type=\"text\"\r\n                readOnly={true}\r\n                margin=\"normal\"\r\n            />\r\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\r\n\r\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\r\n                <Select\r\n                    value={this.props.native.text2command || '_'}\r\n                    onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\r\n                    input={<Input name=\"text2command\" id=\"text2command-helper\" />}\r\n                >\r\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\r\n                    {this.state.text2commandList.map(item => <MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>)}\r\n                </Select>\r\n                <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\r\n            </FormControl>\r\n            <br/>\r\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\r\n                <Select\r\n                    value={this.props.native.nightscout || '_'}\r\n                    onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\r\n                    input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\r\n                >\r\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\r\n                    {this.state.nightscoutList.map(item => <MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>)}\r\n                </Select>\r\n                <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\r\n            </FormControl>\r\n            {this.props.native.nightscout ? <TextField\r\n                style={{marginTop: 3.5}}\r\n                label={I18n.t('Nightscout password')}\r\n                onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\r\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\r\n                value={this.props.native.nightscoutPass}\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n            /> : null}\r\n            {this.props.native.nightscout ? <TextField\r\n                style={{marginTop: 3.5}}\r\n                label={I18n.t('Nightscout api-secret')}\r\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\r\n                value={this.calcNightscoutSecret()}\r\n                type=\"text\"\r\n                readOnly={true}\r\n                margin=\"normal\"\r\n            /> : null}\r\n            <br/>\r\n            <br/>\r\n            <div className={this.props.classes.controlElement}>\r\n                <TextField\r\n                    label={I18n.t('Read blood sugar from')}\r\n                    className={clsx(this.props.classes.input, this.props.classes.controlElement)}\r\n                    value={this.props.native.amazonAlexaBlood || ''}\r\n                    type=\"text\"\r\n                    onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\r\n                    margin=\"normal\"\r\n                />\r\n                <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\r\n                <FormControlLabel  className={this.props.classes.controlElement}\r\n                    control={\r\n                        <Checkbox\r\n                            style={{paddingLeft: 30}}\r\n                            checked={this.props.native.amazonAlexaBloodShortAnswer || false}\r\n                            onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label={I18n.t('Short answer for blood sugar')}\r\n                />\r\n            </div>\r\n            <br/>\r\n            {this.renderToast()}\r\n            {this.getSelectIdDialog('amazonAlexaBlood')}\r\n        </form>;\r\n    }\r\n}\r\n\r\nServices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    onShowError: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Services);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconClose from \"@material-ui/icons/Close\";\r\nimport IconCheck from \"@material-ui/icons/Check\";\r\n\r\nconst CHANGED_COLOR = '#e7000040';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        width: 'calc(50% - 20px)',\r\n        minWidth: 300,\r\n        maxWidth: 450\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 60px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    enumLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    enumLineEdit: {\r\n        //float: 'right'\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    enumLineName: {\r\n\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    enumLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    enumLineId: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n});\r\n\r\nclass Enums extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            editId: '',\r\n            editedSmartName: '',\r\n            funcs: [],\r\n            rooms: [],\r\n            changed: [],\r\n            message: '',\r\n            loading: true,\r\n        };\r\n\r\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\r\n\r\n        this.props.socket.getEnums()\r\n            .then(res => {\r\n                const funcs = [];\r\n                const rooms = [];\r\n                res && Object.keys(res).forEach(id => {\r\n                    if (id.match(/^enum\\.rooms\\./)) {\r\n                        rooms.push(res[id]);\r\n                    } else\r\n                    if (id.match(/^enum\\.functions\\./)) {\r\n                        funcs.push(res[id]);\r\n                    }\r\n                });\r\n\r\n                this.setState({funcs, rooms, loading: false});\r\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\r\n    }\r\n\r\n    onEnumUpdate(id, obj) {\r\n        this.removeChanged(id);\r\n        this.updateObjInState(id, obj);\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    updateObjInState(id, obj) {\r\n        // update obj\r\n        if (id.match(/^enum\\.functions\\./)) {\r\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\r\n                if (this.state.funcs[i]._id === id) {\r\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\r\n                    if (obj) {\r\n                        funcs[i] = obj;\r\n                    } else {\r\n                        funcs.splice(i, 1);\r\n                    }\r\n                    this.setState({funcs});\r\n                    break;\r\n                }\r\n            }\r\n        } else\r\n        if (id.match(/^enum\\.rooms\\./)) {\r\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\r\n                if (this.state.rooms[i]._id === id) {\r\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\r\n                    if (obj) {\r\n                        rooms[i] = obj;\r\n                    } else {\r\n                        rooms.splice(i, 1);\r\n                    }\r\n                    this.setState({rooms});\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onToggleEnum(id) {\r\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\r\n\r\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n        obj = JSON.parse(JSON.stringify(obj));\r\n        if (smartName !== false) {\r\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n        } else {\r\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n        }\r\n\r\n        this.addChanged(id);\r\n\r\n        this.props.socket.setObject(id, obj)\r\n            .then(() => {\r\n                // update obj\r\n                this.updateObjInState(id, obj);\r\n                this.informInstance(id);\r\n\r\n                setTimeout(() => this.removeChanged(id), 500);\r\n            });\r\n    }\r\n\r\n    onEdit(id) {\r\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\r\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n        if (typeof smartName === 'object' && smartName) {\r\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n        }\r\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n        this.setState({editId: id, editedSmartName: smartName});\r\n    }\r\n\r\n    renderEnum(obj) {\r\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n        // convert old format\r\n        if (smartName && typeof smartName === 'object') {\r\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\r\n        }\r\n        let name = Utils.getObjectNameFromObj(obj);\r\n\r\n        return <div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\r\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? <span className={this.props.classes.enumLineSubName}> ({name})</span> : name}</span>\r\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\r\n            <Switch\r\n                className={this.props.classes.enumLineEnabled}\r\n                checked={smartName !== false}\r\n                onChange={() => this.onToggleEnum(obj._id)}\r\n            />\r\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\r\n                <IconEdit fontSize=\"small\" />\r\n            </IconButton>\r\n\r\n        </div>;\r\n    }\r\n\r\n    renderEnums(name) {\r\n        return this.state[name].map(e => this.renderEnum(e));\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName() {\r\n        // Check if the name is duplicate\r\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\r\n        if (enums.find(obj =>\r\n            this.state.editId !== obj._id && (\r\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\r\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\r\n            this.setState({message: I18n.t('Duplicate name')});\r\n        } else {\r\n            this.addChanged(this.state.editId);\r\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\r\n            const id = this.state.editId;\r\n            this.setState({editId: ''});\r\n            let newObj;\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    newObj = obj;\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.updateObjInState(id, newObj);\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        }\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\r\n\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({editId: ''})}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\r\n                        value={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({editId: ''})}\r\n                        startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress />;\r\n        }\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <div className={this.props.classes.column}>\r\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\r\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\r\n                </div>\r\n                <div className={this.props.classes.column}>\r\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\r\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\r\n                </div>\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nEnums.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Enums);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\nimport IconCheck from '@material-ui/icons/Check';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\nconst actionsMapping = {\r\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\r\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLineName:  {\r\n        fontSize: 8,\r\n        fontStyle: 'italic',\r\n        display: 'block'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlexaSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editedSmartType: null,\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showListOfDevices: false,\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({\r\n                        devices: list,\r\n                        loading: false,\r\n                        changed: [],\r\n                        browse: false\r\n                    });\r\n\r\n                    if (list.length > 300) {\r\n                        this.props.onError(I18n.t('Too many devices (%s) configured. Max number is 300', list.length));\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? `${state.val}/${state.ack}` : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            this.devTimer && clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    let editedSmartType = null;\r\n                    if (!device.additionalApplianceDetails.group) {\r\n                        editedSmartType = device.additionalApplianceDetails.smartType;\r\n                    }\r\n\r\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'turnOn') return -1;\r\n            if (b === 'turnOn') return 1;\r\n\r\n            if (a === 'turnOff') return -1;\r\n            if (b === 'turnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].friendlyName);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSelectByOn(dev, lineNum, id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\r\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\r\n            }\r\n            return <FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectTypeSelector(type, onChange) {\r\n        if (type !== false) {\r\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\r\n            }\r\n            return <FormControl>\r\n                <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const id = dev.additionalApplianceDetails.id;\r\n            const name = dev.additionalApplianceDetails.name || id;\r\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n            }\r\n            result.push(<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n                <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)} style={{width: 80}}>{this.renderActions(dev)}</div>\r\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\r\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\r\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\r\n            </div>);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        let friendlyName = dev.friendlyName;\r\n        let title;\r\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\r\n            title = friendlyName;\r\n        } else {\r\n            title = <span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>;\r\n        }\r\n\r\n        let devCount = 0;\r\n        for (const ch in dev.additionalApplianceDetails.channels) {\r\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\r\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\r\n            }\r\n        }\r\n        devCount = devCount || 1;\r\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\r\n        const id = dev.additionalApplianceDetails.id;\r\n\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(id) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (id === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        // If some of sub channels in change list or in last changed\r\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\r\n            const channels = dev.additionalApplianceDetails.channels;\r\n            try {\r\n                channels && Object.keys(channels).forEach(chan =>\r\n                    chan && channels[chan].forEach(el => {\r\n                        if (this.state.changed.indexOf(el.id) !== -1) {\r\n                            background = CHANGED_COLOR;\r\n                        } else if (this.state.lastChanged === el.id) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                    })\r\n                );\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        return [\r\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {devCount > 1 ?\r\n                        <Badge badgeContent={devCount} color=\"primary\">\r\n                            {expanded ? <IconCollapse/> : <IconExpand />}\r\n                        </Badge> :\r\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{title}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\r\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton> : null}\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton> : null}\r\n            </div>,\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            const editedSmartType = this.state.editedSmartType;\r\n\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        autoFocus\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}\r\n                    startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.onDelete()}\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                        startIcon={<IconDelete/>}\r\n                    >{I18n.t('Delete')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID1\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.friendlyName);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\"\r\n                startIcon={<IconCopy/>}\r\n                >{I18n.t('Copy to clipboard')}</Button>\r\n                <Button variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress  key=\"alexaProgress\" />;\r\n        }\r\n\r\n        return <form key=\"alexa\" className={this.props.classes.tab}>\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            <TextField\r\n                placeholder={I18n.t('Filter')}\r\n                className={this.state.filter}\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.filter ?\r\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                            <IconClear />\r\n                        </IconButton> : undefined,\r\n                }}\r\n            />\r\n            {this.renderDevices()}\r\n            {this.renderMessage()}\r\n            {this.renderEditDialog()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nAlexaSmartNames.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlexaSmartNames);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\nimport {FaTint as IconHumidity} from 'react-icons/fa';\r\nimport {FaMale as IconMotion} from 'react-icons/fa';\r\nimport {FaLink as IconContact} from 'react-icons/fa';\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\nimport IconCheck from \"@material-ui/icons/Check\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n\r\n    getActualTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n    getActualHumidity: {color: colorRead, icon: IconHumidity, desc: 'Get actual humidity'},\r\n\r\n    getMotion: {color: colorRead, icon: IconMotion, desc: 'Get motion'},\r\n    getContact: {color: colorRead, icon: IconContact, desc: 'Get contact'},\r\n\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (!changed.includes(id)) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\r\n            }\r\n            return <FormControl>\r\n                <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId || dev.iobID;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push(<div key={'sub' + id + '_' + lineNum} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? <div className={classes.devSubLineSetId}>{dev.main.setId}</div> : null}\r\n            </div>\r\n        </div>);\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push(<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? <div className={classes.devSubLineSetId}>{attr.setId}</div> : null}\r\n                </div>\r\n            </div>);\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={clsx(this.props.classes.devLineActions,this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return <div key={lineNum}>{JSON.stringify(dev)}</div>;\r\n        const expanded = this.state.expanded.includes(dev.name);\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.includes(dev.iobID);\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        <Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? <IconCollapse/> : <IconExpand />}</Badge> :\r\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>,\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                // update obj\r\n                .then(() => this.informInstance(id))\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        autoFocus\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.onDelete()}\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                        startIcon={<IconDelete/>}\r\n                    >{I18n.t('Delete')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({showConfirmation: ''})}\r\n                        startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) {\r\n                continue;\r\n            }\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCopy/>}\r\n                >{I18n.t('Copy to clipboard')}</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<IconClose/>}\r\n                    onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress key=\"alexaProgress\" />;\r\n        }\r\n\r\n        return <form key=\"alexa\" className={this.props.classes.tab}>\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            <TextField\r\n                placeholder={I18n.t('Filter')}\r\n                className={this.state.filter}\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.filter ? (\r\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            />\r\n            {this.renderDevices()}\r\n            {this.renderMessage()}\r\n            {this.renderEditDialog()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconExpand from '@material-ui/icons/NavigateNext';\r\nimport IconCollapse from '@material-ui/icons/ExpandMore';\r\nimport IconCheck from '@material-ui/icons/Check';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nfunction getAttr(obj, attr, lookup) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (!obj) {\r\n        return null;\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        if (lookup && lookup[obj[attr[0]]]) {\r\n            return lookup[obj[attr[0]]];\r\n        } else {\r\n            return obj[attr[0]];\r\n        }\r\n    } else {\r\n        const name = attr.shift();\r\n        return getAttr(obj[name], attr);\r\n    }\r\n}\r\n\r\nfunction setAttr(obj, attr, value) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        return obj[attr[0]] = value;\r\n    } else {\r\n        const name = attr.shift();\r\n        if (obj[name] === null || obj[name] === undefined) {\r\n            obj[name] = {};\r\n        }\r\n        return setAttr(obj[name], attr, value);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        minWidth: 800,\r\n        maxWidth: 1920,\r\n    },\r\n    cell: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n    },\r\n    rowMainWithChildren: {\r\n\r\n    },\r\n    rowMainWithoutChildren: {\r\n\r\n    },\r\n    rowNoEdit: {\r\n        opacity: 0.3\r\n    },\r\n    cellExpand: {\r\n        width: 30,\r\n    },\r\n    cellButton: {\r\n        width: 30,\r\n    },\r\n    cellHeader: {\r\n        fontWeight: 'bold',\r\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\r\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\r\n        height: 48,\r\n        wordBreak: 'break-word',\r\n        whiteSpace: 'pre',\r\n    },\r\n    width_name_nicknames: {\r\n        maxWidth: 150,\r\n    },\r\n    width_ioType: {\r\n        maxWidth: 100,\r\n    },\r\n    width_type: {\r\n        maxWidth: 100,\r\n    },\r\n    width_displayTraits: {\r\n        maxWidth: 100,\r\n    },\r\n    width_roomHint: {\r\n        maxWidth: 100,\r\n    },\r\n    rowSecondary: {\r\n        fontStyle: 'italic',\r\n    },\r\n    cellSecondary: {\r\n        fontSize: 10,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy, lookup) {\r\n    const _a = getAttr(a, orderBy, lookup) || '';\r\n    const _b = getAttr(b, orderBy, lookup) || '';\r\n\r\n    if (_b < _a) {\r\n        return -1;\r\n    } else\r\n    if (_b > _a) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction getComparator(order, orderBy, lookup) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\r\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order) {\r\n            return order;\r\n        } else {\r\n            return a[1] - b[1];\r\n        }\r\n    });\r\n\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nclass TreeTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let opened = window.localStorage.getItem('iot.ghome.opened') || '[]';\r\n        try {\r\n            opened = JSON.parse(opened) || [];\r\n        } catch (e) {\r\n            opened = [];\r\n        }\r\n        if (!Array.isArray(opened)) {\r\n            opened = [];\r\n        }\r\n\r\n        this.state = {\r\n            opened,\r\n            editMode: false,\r\n            deleteMode: false,\r\n            editData: null,\r\n            order: 'asc',\r\n            orderBy: this.props.columns[0].field,\r\n        }\r\n    }\r\n\r\n    renderCell(item, col, level, i) {\r\n        if (this.state.editMode === i && col.editable !== 'never') {\r\n            let val = getAttr(item, col.field);\r\n            if (Array.isArray(val)) {\r\n                val = val[0];\r\n            }\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{\r\n                    col.lookup ?\r\n                        <Select\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                            value={(this.state.editData && this.state.editData[col.field]) || val}\r\n                        >\r\n                            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\r\n                        </Select>\r\n                        :\r\n                        <TextField\r\n                            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                        />\r\n            }</TableCell>;\r\n        } else {\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\r\n        }\r\n    }\r\n\r\n    renderLine(item, level) {\r\n        level = level || 0;\r\n        const i = this.props.data.indexOf(item);\r\n        if (!item) {\r\n            return null;\r\n        }\r\n        if (!level && item.parentId) {\r\n            return null;\r\n        } else if (level && !item.parentId) {\r\n            return null; // should never happens\r\n        } else {\r\n            // try to find children\r\n            const children = this.props.data.filter(it => it.parentId === item.id);\r\n            const opened = this.state.opened.includes(item.id);\r\n\r\n            return [\r\n                <TableRow\r\n                    key={item.id}\r\n                    className={clsx(\r\n                        this.props.classes.row,\r\n                        level  && this.props.classes.rowSecondary,\r\n                        !level && children.length && this.props.classes.rowMainWithChildren,\r\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\r\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\r\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\r\n                    )}\r\n                >\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\r\n                        {children.length ? <IconButton onClick={() => {\r\n                            const opened = [...this.state.opened];\r\n                            const pos = opened.indexOf(item.id);\r\n                            if (pos === -1) {\r\n                                opened.push(item.id);\r\n                                opened.sort();\r\n                            } else {\r\n                                opened.splice(pos, 1);\r\n                            }\r\n\r\n                            this.setState({opened});\r\n                        }}>\r\n                                {opened ? <IconCollapse/> : <IconExpand/>}\r\n                            </IconButton>  : null}\r\n                    </TableCell>\r\n                    <TableCell scope=\"row\"\r\n                       className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                       style={this.props.columns[0].cellStyle}>\r\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\r\n                    </TableCell>\r\n                    {this.props.columns.map((col, ii) =>\r\n                        !ii ? null : this.renderCell(item, col, level, i))}\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\r\n                                onClick={() => {\r\n                                if (this.state.editMode !== false) {\r\n                                    const newData = JSON.parse(JSON.stringify(item));\r\n                                    this.state.editData && Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\r\n                                    this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\r\n                                } else {\r\n                                    this.setState({deleteMode: false}, () => this.props.onDelete(item))\r\n                                }\r\n                            }}>\r\n                                <IconCheck/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false}\r\n                                onClick={() => this.setState({editMode: i, editData: null})}>\r\n                                <IconEdit/>\r\n                            </IconButton>}\r\n                    </TableCell>\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\r\n                                <IconClose/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.deleteMode !== false}\r\n                                onClick={() => this.setState({deleteMode: i})}>\r\n                                <IconDelete/>\r\n                            </IconButton>\r\n                        }\r\n                    </TableCell>\r\n                </TableRow>,\r\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\r\n            ];\r\n        }\r\n    }\r\n\r\n    handleRequestSort(property) {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    }\r\n\r\n    renderHead() {\r\n        return <TableHead>\r\n            <TableRow>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}/>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\r\n                    style={this.props.columns[0].cellStyle}\r\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\r\n                >\r\n                    <TableSortLabel\r\n                        active={this.state.orderBy === this.props.columns[0].field}\r\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\r\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\r\n                    >\r\n                        {this.props.columns[0].title}\r\n                        {this.state.orderBy === this.props.columns[0].field ?\r\n                            <span className={this.props.classes.visuallyHidden}>\r\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span> : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                {this.props.columns.map((col, i) =>\r\n                    !i ? null : <TableCell\r\n                        key={col.field}\r\n                        className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\r\n                        style={col.cellStyle}\r\n                        component=\"th\"\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === col.field}\r\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\r\n                            onClick={() => this.handleRequestSort(col.field)}\r\n                        >\r\n                            {col.title}\r\n                            {this.state.orderBy === col.field ?\r\n                                <span className={this.props.classes.visuallyHidden}>\r\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span> : null}\r\n                        </TableSortLabel>\r\n                </TableCell>)}\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    render() {\r\n        const lookup = this.props.columns ? this.props.columns.find(col => col.field === this.state.orderBy).lookup : '';\r\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\r\n\r\n        return <div className={clsx(this.props.classes.tableContainer, this.props.className)}>\r\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\r\n                {this.renderHead()}\r\n                <TableBody>\r\n                    {table.map(item => this.renderLine(item))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>;\r\n    }\r\n}\r\n\r\nTreeTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    columns: PropTypes.array,\r\n    onUpdate: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(TreeTable);\r\n\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport ExpertIcon from '@iobroker/adapter-react/icons/IconExpert';\r\n\r\nimport TreeTable from '../Components/TreeTable';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    tableDiv: {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        height: 'calc(100% - 48px)',\r\n    },\r\n    searchText: {\r\n        width: 150,\r\n        marginLeft: theme.spacing(1),\r\n        verticalAlign: 'middle'\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n});\r\n\r\nconst MOBILE_HEIGHT = 400;\r\nconst MOBILE_WIDTH  = 400;\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\r\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\r\n            showSelectId: false,\r\n            searchText: '',\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            helpHeight: 0\r\n        };\r\n\r\n        this.columns = [\r\n            {\r\n                title: I18n.t('ID'),\r\n                field: 'id',\r\n                editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }\r\n            },\r\n            {title: I18n.t('Smart names'), field: 'name.nicknames'},\r\n            {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }},\r\n            {\r\n                title: I18n.t('Type'),\r\n                field: 'type',\r\n                lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }\r\n            },\r\n            {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                }},\r\n\r\n            {\r\n                title: I18n.t('Attributes'),\r\n                field: 'displayAttributes',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                                  value={props.value}\r\n                                                  onChange={e => props.onChange(e.target.value)}\r\n                />\r\n            },\r\n            {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\r\n            {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '3rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n            },\r\n            {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )\r\n            },\r\n            { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )},\r\n        ];\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n        this.helpRef             = React.createRef();\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({message: I18n.t(error)});\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\r\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\r\n            }\r\n            return <FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\" startIcon={<IconCopy/>}>{I18n.t('Copy to clipboard')}</Button>\r\n                <Button startIcon={<IconClose/>} variant=\"contained\" onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    renderInstructions() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        if (this.state.helpHidden || this.props.smallDisplay || !desktop) {\r\n            return null;\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n        return <div style={{width: '100%'}} ref={this.helpRef}>\r\n            <div style={{marginTop: '4rem', display: 'flex'}}>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                    <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                </div>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\r\n                    <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div style={{flex: '100%'}}>\r\n                <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t('For help use this forum'))}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        return <Toolbar variant=\"dense\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                 onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            {desktop && !this.state.hideHelp ? <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Show/Hide help')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\r\n                     this.setState({helpHidden: !this.state.helpHidden});\r\n                 }} disabled={this.state.browse}><IconHelp/></Fab> : null }\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 size=\"small\"\r\n                 color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Toggle expert mode')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\r\n                     this.setState({expertMode: !this.state.expertMode});\r\n                 }} disabled={this.state.browse}><ExpertIcon/></Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            {!this.props.smallDisplay ? <TextField\r\n                className={this.props.classes.searchText}\r\n                label={I18n.t('Filter')}\r\n                value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.searchText ? (\r\n                        <IconButton onClick={() => this.setState({ searchText: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            /> : null}\r\n        </Toolbar>;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.helpRef.current) {\r\n            const h = this.helpRef.current.clientHeight;\r\n            if (this.state.helpHeight !== h) {\r\n                if (!this.state.helpHidden && h + 64 + 48 + 200 > window.innerHeight) {\r\n                    setTimeout(() => this.setState({helpHeight: h, helpHidden: true, hideHelp: true}), 50);\r\n                } else {\r\n                    setTimeout(() => this.setState({helpHeight: h}), 50);\r\n                }\r\n            }\r\n        } else if (this.state.helpHeight) {\r\n            setTimeout(() => this.setState({helpHeight: 0}), 50);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress  key=\"alexaProgress\" />;\r\n        }\r\n        const searchText = this.state.searchText.toLowerCase();\r\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\r\n            item.name?.name?.toLowerCase().includes(searchText) ||\r\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\r\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\r\n            : this.state.devices;\r\n\r\n        return <form key=\"gh\" className={this.props.classes.tab}>\r\n            {this.renderToolbar()}\r\n            {this.renderInstructions()}\r\n            <div className={this.props.classes.tableDiv} style={{height: `calc(100% - ${48 + (this.state.helpHeight ? this.state.helpHeight + 64 : 0)}px)`}}>\r\n                <TreeTable\r\n                    columns={this.state.expertMode ? this.columns : this.columns.filter(item => !item.expertMode)}\r\n                    data={devices}\r\n                    onUpdate={(newData, oldData) => {\r\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                            newData.name.nicknames = newData.name.nicknames.join(',');\r\n                        }\r\n                        this.editedSmartName = newData.name.nicknames;\r\n                        this.setState({editId: newData.id}, () => {\r\n                            if (!newData.type || !newData.displayTraits) {\r\n                                this.setState({browse: true, message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                            } else {\r\n                                this.setState({browse: true});\r\n                            }\r\n\r\n                            this.onGHParamsChange(newData, oldData);\r\n                            const devices = [...this.state.devices];\r\n                            devices[devices.indexOf(oldData)] = newData;\r\n                            this.setState({ ...this.state, devices});\r\n                        });\r\n                    }}\r\n\r\n                    onDelete={oldData => {\r\n                        // if smartenum set smartname on false if not delete/reset smartname content\r\n                        if (oldData.smartEnum === 'X') {\r\n                            this.setState({deleteId: oldData.id});\r\n                        } else {\r\n                            this.props.socket.getObject(oldData.id)\r\n                                .then(obj => {\r\n                                    if (obj && obj.common && obj.common['smartName']) {\r\n                                        delete obj.common['smartName']['ghTraits'];\r\n                                        delete obj.common['smartName']['ghType'];\r\n                                        delete obj.common['smartName']['ghAttributes'];\r\n                                    }\r\n                                    return this.props.socket.setObject(oldData.id, obj);\r\n                                });\r\n                        }\r\n\r\n                        return new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                if (this.state.deleteId) {\r\n                                    this.onDelete();\r\n                                } else {\r\n                                    this.informInstance(oldData.id);\r\n                                }\r\n                                resolve();\r\n                                const devices = [...this.state.devices];\r\n                                devices.splice(devices.indexOf(oldData), 1);\r\n                                this.setState({ ...this.state, devices });\r\n                            }, 600);\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n            {this.renderMessage()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport const withMediaQuery = () => Component => props =>\r\n    <Component smallDisplay={useMediaQuery('(max-width:600px)')} {...props} />;\r\n\r\nexport default withStyles(styles)(withMediaQuery()(GoogleSmartNames));\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        extendedProps.sentryDSN = window.sentryDSN;\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\r\n            .then(state => {\r\n                if (!state || !state.val) {\r\n                    this.setState({showAckTempPasswordDialog: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    renderAckTempPasswordDialog() {\r\n        if (!this.state.showAckTempPasswordDialog) {\r\n            return null;\r\n        } else {\r\n            return <Dialog\r\n                open={true}\r\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {I18n.t('The linking process has been changed for a few months.')}\r\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\r\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\r\n                        {I18n.t('Not understood')}\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() =>\r\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, {val: true, ack: true})\r\n                            .then(() =>\r\n                                this.setState({showAckTempPasswordDialog: false}))\r\n                    } color=\"primary\" autoFocus>\r\n                        {I18n.t('Roger that')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)} scrollButtons=\"auto\">\r\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        changed={this.state.changed}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />}\r\n                    {this.state.selectedTab === 'enums' && <TabEnums\r\n                        key=\"enums\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                    />}\r\n                    {this.state.selectedTab === 'alexa' && <TabAlexaSmartNames\r\n                        key=\"alexa\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                        {this.state.selectedTab === 'google' && <TabGoogleSmartNames\r\n                        key=\"google\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                    {this.state.selectedTab === 'alisa' && <TabAlisaSmartNames\r\n                        key=\"alisa\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                    {this.state.selectedTab === 'extended' && <TabExtended\r\n                        key=\"extended\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />}\r\n                    {this.state.selectedTab === 'services' && <TabServices\r\n                        key=\"services\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onShowError={error => this.showError(error)}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n                {this.renderAckTempPasswordDialog()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nwindow.sentryDSN = 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57';\r\n\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}