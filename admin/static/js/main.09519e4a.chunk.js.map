{"version":3,"sources":["Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Components/TreeTable.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","onAliveChanged","id","state","adapterName","instance","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","this","subscribeState","unsubscribeState","pass","length","match","I18n","t","title","attr","type","error","checkPassword","native","TextField","label","className","classes","input","value","helperText","onChange","e","target","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","style","textAlign","Button","variant","size","color","onClick","window","open","focus","amazonAlexa","onDebug","opacity","debugVisible","onMouseEnter","onMouseLeave","sendTo","data","file","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","forceUserCreate","ack","Promise","resolve","getObject","obj","common","enabled","setObject","catch","err","onError","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","onLoad","clsx","column","columnSettings","renderInput","renderCheckbox","marginTop","googleHome","newVal","changed","hintUnsaved","button","disabled","resetCerts","startIcon","fontWeight","columnLogo","renderCard","renderToast","Component","withStyles","theme","width","minHeight","minWidth","marginRight","marginBottom","maxWidth","height","display","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","adminInstances","webInstances","getAdapterInstances","filter","item","auth","map","name","_id","split","pop","noTranslation","unshift","options","FormControl","paddingRight","Select","Input","MenuItem","FormHelperText","imagePrefix","selected","types","onOk","renderSelect","Fab","marginLeft","getSelectIdDialog","remote","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","list","nsList","replace","key","showError","chips","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","encodeURIComponent","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","padding","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","parse","i","find","smartName","getSmartNameFromObj","noCommon","disableSmartName","removeSmartName","addChanged","informInstance","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","autoFocus","DialogActions","changeSmartName","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","colorOn","colorOff","colorSet","colorRead","CHANGED_COLOR","DEFAULT_CHANNEL_COLOR_DARK","DEFAULT_CHANNEL_COLOR_LIGHT","LAST_CHANGED_COLOR_DARK","LAST_CHANGED_COLOR_LIGHT","actionsMapping","turnOn","icon","IconOn","desc","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","toString","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","result","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","el","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","getActualTemperature","getActualHumidity","IconHumidity","getMotion","IconMotion","getContact","IconContact","AlisaDevices","includes","iobID","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","getAttr","lookup","shift","setAttr","descendingComparator","orderBy","_a","_b","TreeTable","opened","localStorage","getItem","Array","isArray","editMode","deleteMode","editData","order","columns","field","col","level","editable","TableCell","cell","cellSecondary","cellStyle","component","v","parentId","children","it","TableRow","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","scope","ii","renderCell","cellButton","newData","onUpdate","renderLine","property","isAsc","TableHead","cellHeader","sortDirection","TableSortLabel","active","direction","handleRequestSort","visuallyHidden","table","array","comparator","stabilizedThis","index","stableSort","getComparator","tableContainer","Table","stickyHeader","renderHead","TableBody","React","paddingBottom","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","clip","GoogleSmartNames","myTableRef","createRef","expertMode","helpHidden","searchText","helpHeight","editComponent","rows","resize","helpRef","oldData","displayTraits","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","desktop","innerHeight","innerWidth","smallDisplay","manualModeHint","ref","flex","Toolbar","hideHelp","setItem","prevProps","prevState","snapshot","current","h","clientHeight","defaultNames","renderToolbar","renderInstructions","onGHParamsChange","smartEnum","useMediaQuery","App","extendedProps","encryptedFields","translations","require","sentryDSN","showAckTempPasswordDialog","selectedTab","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","scrollButtons","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","build","ReactDOM","render","onThemeChange","_theme","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09519e4a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return <TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />;\n    }\n\n    renderCard() {\n        return <Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('https://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n                {this.props.native.amazonAlexa ?\n                    <Button\n                        title=\"Debug\"\n                        onClick={() => this.onDebug()}\n                        style={{opacity: this.state.debugVisible ? 1 : 0}}\n                        onMouseEnter={() => this.setState({debugVisible: true})}\n                        onMouseLeave={() => this.setState({debugVisible: false})}\n                    >Debug</Button> : null}\n            </CardActions>\n        </Card>;\n    }\n\n    onDebug() {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'debug', null)\n            .then(data => {\n                const file = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});\n                if (window.navigator.msSaveOrOpenBlob) // IE10+\n                    window.navigator.msSaveOrOpenBlob(file, 'debug.json');\n                else { // Others\n                    const a = document.createElement('a');\n                    const url = URL.createObjectURL(file);\n                    a.href = url;\n                    a.download = 'debug.json';\n                    document.body.appendChild(a);\n                    a.click();\n\n                    setTimeout(() => {\n                        document.body.removeChild(a);\n                        window.URL.revokeObjectURL(url);\n                    }, 0);\n                }\n            });\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) {\n            return null;\n        }\n        return <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={true}\n            autoHideDuration={6000}\n            onClose={() => this.setState({toast: ''})}\n            ContentProps={{\n                'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{this.state.toast}</span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={this.props.classes.close}\n                    onClick={() => this.setState({toast: ''})}\n                >\n                    <IconClose />\n                </IconButton>,\n            ]}\n        />;\n    }\n\n    renderCheckbox(title, attr, style) {\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />;\n    }\n\n    render() {\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                classes={{}}\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings) }>\n                { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                  style={{ marginTop: 5 }}\n                    control={\n                      <Checkbox\n                          checked={this.props.native.googleHome}\n                          onChange={() => {\n                              // activate alexa if google home is on (temporary)\n                              const newVal = !this.props.native.googleHome;\n                              this.props.onChange('googleHome', newVal, () =>\n                                  newVal && this.props.onChange('amazonAlexa', true));\n                          }}\n                          color=\"primary\"\n                      />\n                    }\n                    label={I18n.t('Google Home')}\n                />\n                {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                <br/>\n\n                <p>{I18n.t('new_certs_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts() }\n                        startIcon={<IconReload />}\n                >\n                    { I18n.t('Get new connection certificates') }\n                </Button>\n\n                <p>{I18n.t('new_credentials_tip')}</p>\n                {this.props.changed ?\n                    <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts(true) }\n                        startIcon={<IconReload />}\n                >\n                    { I18n.t('Create IoT credentials anew') }\n                </Button>\n                <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n            </div>\n            <div className={clsx(this.props.classes.column, this.props.classes.columnLogo)}>{this.renderCard() }</div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        marginTop: 0,\r\n        minWidth: 400\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n    controlElement: {\r\n        //background: '#d2d2d2',\r\n        marginBottom: 5\r\n    }\r\n});\r\n\r\nclass ExtendedOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showSelectId: false,\r\n            adminInstances: [],\r\n            webInstances: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.getAdapterInstances('admin')\r\n            .then(adminInstances => {\r\n                // filter out instances with authentication\r\n                adminInstances = adminInstances\r\n                    .filter(item => !item.common.auth)\r\n                    .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\r\n\r\n                adminInstances.unshift({title: 'disabled', value: ''});\r\n\r\n                return this.props.socket.getAdapterInstances('web')\r\n                    .then(webInstances => {\r\n                        webInstances = webInstances\r\n                            .filter(item => !item.common.auth)\r\n                            .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\r\n\r\n                        webInstances.unshift({title: 'disabled', value: ''});\r\n\r\n                        this.setState({adminInstances, webInstances});\r\n                    });\r\n            });\r\n    }\r\n\r\n    renderInput(title, attr, type) {\r\n        return <TextField\r\n            label={I18n.t(title)}\r\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\r\n            value={this.props.native[attr]}\r\n            type={type || 'text'}\r\n            onChange={e => this.props.onChange(attr, e.target.value)}\r\n            margin=\"normal\"\r\n        />;\r\n    }\r\n\r\n    renderSelect(title, attr, options, style) {\r\n        return <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={Object.assign({paddingTop: 5, paddingRight: 8}, style)}>\r\n            <Select\r\n                value={this.props.native[attr] || '_'}\r\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\r\n                input={<Input name={attr} id={attr + '-helper'} />}\r\n            >\r\n                {options.map(item => <MenuItem key={'key-' + item.value} value={item.value || '_'}>{item.noTranslation ? item.title : I18n.t(item.title)}</MenuItem>)}\r\n            </Select>\r\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\r\n        </FormControl>;\r\n    }\r\n\r\n    renderCheckbox(title, attr, style) {\r\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\r\n            control={\r\n                <Checkbox\r\n                    checked={this.props.native[attr]}\r\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label={I18n.t(title)}\r\n        />;\r\n    }\r\n\r\n    getSelectIdDialog(attr) {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID2\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={this.props.native[attr]}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={selected => {\r\n                    this.setState({showSelectId: false});\r\n                    this.props.onChange(attr, selected);\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\r\n                {this.renderSelect('Language', 'language', [\r\n                    {title: 'default', value: ''},\r\n                    {title: 'english', value: 'en', noTranslation: true},\r\n                    {title: 'Deutsch', value: 'de', noTranslation: true},\r\n                    {title: 'русский', value: 'ru', noTranslation: true}\r\n                ], {marginTop: 10})}<br/>\r\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\r\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\r\n                {this.renderInput('Replace in names', 'replaces')}<br/>\r\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\r\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\r\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\r\n                </div>\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderInput('Write response to', 'responseOID')}\r\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\r\n                </div>\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\r\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\r\n                </div>\r\n                {this.renderCheckbox('Debug outputs', 'debug')}\r\n                {this.getSelectIdDialog('responseOID')}\r\n                <div className={this.props.classes.controlElement}>\r\n                    {this.renderCheckbox('Allow remote access', 'remote')}\r\n                    {this.props.native.remote ? this.renderSelect('Admin instance', 'remoteAdminInstance', this.state.adminInstances, {width: 120, minWidth: 120}) : null}\r\n                    {this.props.native.remote ? this.renderSelect('Web instance', 'remoteWebInstance', this.state.webInstances, {width: 120, minWidth: 120}) : null}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nExtendedOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExtendedOptions);\r\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/icons/IconCopy';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return <TextField\n            label={I18n.t(title)}\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />;\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID3\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return <div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word => <Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />)}\n            </div>\n        </div>;\n    }\n\n    render() {\n        return <form className={this.props.classes.tab}>\n            <Button\n                variant=\"outlined\"\n                disabled={!this.state.isInstanceAlive || this.state.running}\n                color=\"primary\"\n                title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                onClick={() => this.reissueUrlKey()}\n                startIcon={<IconRefresh />}\n            >\n                {I18n.t('Get new service URL key')}\n            </Button><br/>\n\n            {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n            <TextField\n                style={{marginTop: 10}}\n                label={I18n.t('Use following link for IFTTT')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\n                value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            />\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n            <br/>\n\n            {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n            <TextField\n                style={{marginTop: 10}}\n                label={I18n.t('Use following link for custom service')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\n                value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            />\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\n                <Select\n                    value={this.props.native.text2command || '_'}\n                    onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                    input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                >\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                    {this.state.text2commandList.map(item => <MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>)}\n                </Select>\n                <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n            </FormControl>\n            <br/>\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\n                <Select\n                    value={this.props.native.nightscout || '_'}\n                    onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                    input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                >\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                    {this.state.nightscoutList.map(item => <MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>)}\n                </Select>\n                <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n            </FormControl>\n            {this.props.native.nightscout ? <TextField\n                style={{marginTop: 3.5}}\n                label={I18n.t('Nightscout password')}\n                onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\n                value={this.props.native.nightscoutPass}\n                type=\"text\"\n                margin=\"normal\"\n            /> : null}\n            {this.props.native.nightscout ? <TextField\n                style={{marginTop: 3.5}}\n                label={I18n.t('Nightscout api-secret')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\n                value={this.calcNightscoutSecret()}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            /> : null}\n            <br/>\n            <br/>\n            <div className={this.props.classes.controlElement}>\n                <TextField\n                    label={I18n.t('Read blood sugar from')}\n                    className={clsx(this.props.classes.input, this.props.classes.controlElement)}\n                    value={this.props.native.amazonAlexaBlood || ''}\n                    type=\"text\"\n                    onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                <FormControlLabel  className={this.props.classes.controlElement}\n                    control={\n                        <Checkbox\n                            style={{paddingLeft: 30}}\n                            checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                            onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={I18n.t('Short answer for blood sugar')}\n                />\n            </div>\n            <br/>\n            {this.renderToast()}\n            {this.getSelectIdDialog('amazonAlexaBlood')}\n        </form>;\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconClose from \"@material-ui/icons/Close\";\nimport IconCheck from \"@material-ui/icons/Check\";\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                res && Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return <div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? <span className={this.props.classes.enumLineSubName}> ({name})</span> : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>;\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return <Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.changeSmartName()}\n                        color=\"primary\"\n                        startIcon={<IconCheck/>}\n                    >{I18n.t('Ok')}</Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.setState({editId: ''})}\n                        startIcon={<IconClose/>}\n                    >{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\nimport IconCheck from '@material-ui/icons/Check';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\nconst actionsMapping = {\r\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\r\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLineName:  {\r\n        fontSize: 8,\r\n        fontStyle: 'italic',\r\n        display: 'block'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlexaSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editedSmartType: null,\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showListOfDevices: false,\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({\r\n                        devices: list,\r\n                        loading: false,\r\n                        changed: [],\r\n                        browse: false\r\n                    });\r\n\r\n                    if (list.length > 300) {\r\n                        this.props.onError(I18n.t('Too many devices (%s) configured. Max number is 300', list.length));\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? `${state.val}/${state.ack}` : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            this.devTimer && clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    let editedSmartType = null;\r\n                    if (!device.additionalApplianceDetails.group) {\r\n                        editedSmartType = device.additionalApplianceDetails.smartType;\r\n                    }\r\n\r\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'turnOn') return -1;\r\n            if (b === 'turnOn') return 1;\r\n\r\n            if (a === 'turnOff') return -1;\r\n            if (b === 'turnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].friendlyName);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSelectByOn(dev, lineNum, id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\r\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\r\n            }\r\n            return <FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectTypeSelector(type, onChange) {\r\n        if (type !== false) {\r\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\r\n            }\r\n            return <FormControl>\r\n                <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const id = dev.additionalApplianceDetails.id;\r\n            const name = dev.additionalApplianceDetails.name || id;\r\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n            }\r\n            result.push(<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n                <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)} style={{width: 80}}>{this.renderActions(dev)}</div>\r\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\r\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\r\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\r\n            </div>);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        let friendlyName = dev.friendlyName;\r\n        let title;\r\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\r\n            title = friendlyName;\r\n        } else {\r\n            title = <span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>;\r\n        }\r\n\r\n        let devCount = 0;\r\n        for (const ch in dev.additionalApplianceDetails.channels) {\r\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\r\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\r\n            }\r\n        }\r\n        devCount = devCount || 1;\r\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\r\n        const id = dev.additionalApplianceDetails.id;\r\n\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(id) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (id === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        // If some of sub channels in change list or in last changed\r\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\r\n            const channels = dev.additionalApplianceDetails.channels;\r\n            try {\r\n                channels && Object.keys(channels).forEach(chan =>\r\n                    chan && channels[chan].forEach(el => {\r\n                        if (this.state.changed.indexOf(el.id) !== -1) {\r\n                            background = CHANGED_COLOR;\r\n                        } else if (this.state.lastChanged === el.id) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                    })\r\n                );\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        return [\r\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {devCount > 1 ?\r\n                        <Badge badgeContent={devCount} color=\"primary\">\r\n                            {expanded ? <IconCollapse/> : <IconExpand />}\r\n                        </Badge> :\r\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{title}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\r\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton> : null}\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton> : null}\r\n            </div>,\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            const editedSmartType = this.state.editedSmartType;\r\n\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        autoFocus\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}\r\n                    startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.onDelete()}\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                        startIcon={<IconDelete/>}\r\n                    >{I18n.t('Delete')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID1\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.friendlyName);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\"\r\n                startIcon={<IconCopy/>}\r\n                >{I18n.t('Copy to clipboard')}</Button>\r\n                <Button variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress  key=\"alexaProgress\" />;\r\n        }\r\n\r\n        return <form key=\"alexa\" className={this.props.classes.tab}>\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            <TextField\r\n                placeholder={I18n.t('Filter')}\r\n                className={this.state.filter}\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.filter ?\r\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                            <IconClear />\r\n                        </IconButton> : undefined,\r\n                }}\r\n            />\r\n            {this.renderDevices()}\r\n            {this.renderMessage()}\r\n            {this.renderEditDialog()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nAlexaSmartNames.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlexaSmartNames);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\nimport {FaTint as IconHumidity} from 'react-icons/fa';\r\nimport {FaMale as IconMotion} from 'react-icons/fa';\r\nimport {FaLink as IconContact} from 'react-icons/fa';\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\nimport IconCheck from \"@material-ui/icons/Check\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n\r\n    getActualTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n    getActualHumidity: {color: colorRead, icon: IconHumidity, desc: 'Get actual humidity'},\r\n\r\n    getMotion: {color: colorRead, icon: IconMotion, desc: 'Get motion'},\r\n    getContact: {color: colorRead, icon: IconContact, desc: 'Get contact'},\r\n\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (!changed.includes(id)) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\r\n            }\r\n            return <FormControl>\r\n                <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId || dev.iobID;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push(<div key={'sub' + id + '_' + lineNum} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? <div className={classes.devSubLineSetId}>{dev.main.setId}</div> : null}\r\n            </div>\r\n        </div>);\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push(<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? <div className={classes.devSubLineSetId}>{attr.setId}</div> : null}\r\n                </div>\r\n            </div>);\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={clsx(this.props.classes.devLineActions,this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return <div key={lineNum}>{JSON.stringify(dev)}</div>;\r\n        const expanded = this.state.expanded.includes(dev.name);\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.includes(dev.iobID);\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        <Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? <IconCollapse/> : <IconExpand />}</Badge> :\r\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>,\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                // update obj\r\n                .then(() => this.informInstance(id))\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        autoFocus\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.onDelete()}\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                        startIcon={<IconDelete/>}\r\n                    >{I18n.t('Delete')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({showConfirmation: ''})}\r\n                        startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) {\r\n                continue;\r\n            }\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCopy/>}\r\n                >{I18n.t('Copy to clipboard')}</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<IconClose/>}\r\n                    onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress key=\"alexaProgress\" />;\r\n        }\r\n\r\n        return <form key=\"alexa\" className={this.props.classes.tab}>\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            <TextField\r\n                placeholder={I18n.t('Filter')}\r\n                className={this.state.filter}\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.filter ? (\r\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            />\r\n            {this.renderDevices()}\r\n            {this.renderMessage()}\r\n            {this.renderEditDialog()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconExpand from '@material-ui/icons/NavigateNext';\r\nimport IconCollapse from '@material-ui/icons/ExpandMore';\r\nimport IconCheck from '@material-ui/icons/Check';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nfunction getAttr(obj, attr, lookup) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (!obj) {\r\n        return null;\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        if (lookup && lookup[obj[attr[0]]]) {\r\n            return lookup[obj[attr[0]]];\r\n        } else {\r\n            return obj[attr[0]];\r\n        }\r\n    } else {\r\n        const name = attr.shift();\r\n        return getAttr(obj[name], attr);\r\n    }\r\n}\r\n\r\nfunction setAttr(obj, attr, value) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        return obj[attr[0]] = value;\r\n    } else {\r\n        const name = attr.shift();\r\n        if (obj[name] === null || obj[name] === undefined) {\r\n            obj[name] = {};\r\n        }\r\n        return setAttr(obj[name], attr, value);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        minWidth: 800,\r\n        maxWidth: 1920,\r\n    },\r\n    cell: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n    },\r\n    rowMainWithChildren: {\r\n\r\n    },\r\n    rowMainWithoutChildren: {\r\n\r\n    },\r\n    rowNoEdit: {\r\n        opacity: 0.3\r\n    },\r\n    cellExpand: {\r\n        width: 30,\r\n    },\r\n    cellButton: {\r\n        width: 30,\r\n    },\r\n    cellHeader: {\r\n        fontWeight: 'bold',\r\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\r\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\r\n        height: 48,\r\n        wordBreak: 'break-word',\r\n        whiteSpace: 'pre',\r\n    },\r\n    width_name_nicknames: {\r\n        maxWidth: 150,\r\n    },\r\n    width_ioType: {\r\n        maxWidth: 100,\r\n    },\r\n    width_type: {\r\n        maxWidth: 100,\r\n    },\r\n    width_displayTraits: {\r\n        maxWidth: 100,\r\n    },\r\n    width_roomHint: {\r\n        maxWidth: 100,\r\n    },\r\n    rowSecondary: {\r\n        fontStyle: 'italic',\r\n    },\r\n    cellSecondary: {\r\n        fontSize: 10,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy, lookup) {\r\n    const _a = getAttr(a, orderBy, lookup) || '';\r\n    const _b = getAttr(b, orderBy, lookup) || '';\r\n\r\n    if (_b < _a) {\r\n        return -1;\r\n    } else\r\n    if (_b > _a) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction getComparator(order, orderBy, lookup) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\r\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order) {\r\n            return order;\r\n        } else {\r\n            return a[1] - b[1];\r\n        }\r\n    });\r\n\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nclass TreeTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let opened = window.localStorage.getItem('iot.ghome.opened') || '[]';\r\n        try {\r\n            opened = JSON.parse(opened) || [];\r\n        } catch (e) {\r\n            opened = [];\r\n        }\r\n        if (!Array.isArray(opened)) {\r\n            opened = [];\r\n        }\r\n\r\n        this.state = {\r\n            opened,\r\n            editMode: false,\r\n            deleteMode: false,\r\n            editData: null,\r\n            order: 'asc',\r\n            orderBy: this.props.columns[0].field,\r\n        }\r\n    }\r\n\r\n    renderCell(item, col, level, i) {\r\n        if (this.state.editMode === i && col.editable !== 'never') {\r\n            let val = getAttr(item, col.field);\r\n            if (Array.isArray(val)) {\r\n                val = val[0];\r\n            }\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{\r\n                    col.lookup ?\r\n                        <Select\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                            value={(this.state.editData && this.state.editData[col.field]) || val}\r\n                        >\r\n                            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\r\n                        </Select>\r\n                        :\r\n                        <TextField\r\n                            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                        />\r\n            }</TableCell>;\r\n        } else {\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\r\n        }\r\n    }\r\n\r\n    renderLine(item, level) {\r\n        level = level || 0;\r\n        const i = this.props.data.indexOf(item);\r\n        if (!item) {\r\n            return null;\r\n        }\r\n        if (!level && item.parentId) {\r\n            return null;\r\n        } else if (level && !item.parentId) {\r\n            return null; // should never happens\r\n        } else {\r\n            // try to find children\r\n            const children = this.props.data.filter(it => it.parentId === item.id);\r\n            const opened = this.state.opened.includes(item.id);\r\n\r\n            return [\r\n                <TableRow\r\n                    key={item.id}\r\n                    className={clsx(\r\n                        this.props.classes.row,\r\n                        level  && this.props.classes.rowSecondary,\r\n                        !level && children.length && this.props.classes.rowMainWithChildren,\r\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\r\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\r\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\r\n                    )}\r\n                >\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\r\n                        {children.length ? <IconButton onClick={() => {\r\n                            const opened = [...this.state.opened];\r\n                            const pos = opened.indexOf(item.id);\r\n                            if (pos === -1) {\r\n                                opened.push(item.id);\r\n                                opened.sort();\r\n                            } else {\r\n                                opened.splice(pos, 1);\r\n                            }\r\n\r\n                            this.setState({opened});\r\n                        }}>\r\n                                {opened ? <IconCollapse/> : <IconExpand/>}\r\n                            </IconButton>  : null}\r\n                    </TableCell>\r\n                    <TableCell scope=\"row\"\r\n                       className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                       style={this.props.columns[0].cellStyle}>\r\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\r\n                    </TableCell>\r\n                    {this.props.columns.map((col, ii) =>\r\n                        !ii ? null : this.renderCell(item, col, level, i))}\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\r\n                                onClick={() => {\r\n                                if (this.state.editMode !== false) {\r\n                                    const newData = JSON.parse(JSON.stringify(item));\r\n                                    this.state.editData && Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\r\n                                    this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\r\n                                } else {\r\n                                    this.setState({deleteMode: false}, () => this.props.onDelete(item))\r\n                                }\r\n                            }}>\r\n                                <IconCheck/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false}\r\n                                onClick={() => this.setState({editMode: i, editData: null})}>\r\n                                <IconEdit/>\r\n                            </IconButton>}\r\n                    </TableCell>\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\r\n                                <IconClose/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.deleteMode !== false}\r\n                                onClick={() => this.setState({deleteMode: i})}>\r\n                                <IconDelete/>\r\n                            </IconButton>\r\n                        }\r\n                    </TableCell>\r\n                </TableRow>,\r\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\r\n            ];\r\n        }\r\n    }\r\n\r\n    handleRequestSort(property) {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    }\r\n\r\n    renderHead() {\r\n        return <TableHead>\r\n            <TableRow>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}/>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\r\n                    style={this.props.columns[0].cellStyle}\r\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\r\n                >\r\n                    <TableSortLabel\r\n                        active={this.state.orderBy === this.props.columns[0].field}\r\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\r\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\r\n                    >\r\n                        {this.props.columns[0].title}\r\n                        {this.state.orderBy === this.props.columns[0].field ?\r\n                            <span className={this.props.classes.visuallyHidden}>\r\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span> : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                {this.props.columns.map((col, i) =>\r\n                    !i ? null : <TableCell\r\n                        key={col.field}\r\n                        className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\r\n                        style={col.cellStyle}\r\n                        component=\"th\"\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === col.field}\r\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\r\n                            onClick={() => this.handleRequestSort(col.field)}\r\n                        >\r\n                            {col.title}\r\n                            {this.state.orderBy === col.field ?\r\n                                <span className={this.props.classes.visuallyHidden}>\r\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span> : null}\r\n                        </TableSortLabel>\r\n                </TableCell>)}\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    render() {\r\n        const lookup = this.props.columns ? this.props.columns.find(col => col.field === this.state.orderBy).lookup : '';\r\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\r\n\r\n        return <div className={clsx(this.props.classes.tableContainer, this.props.className)}>\r\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\r\n                {this.renderHead()}\r\n                <TableBody>\r\n                    {table.map(item => this.renderLine(item))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>;\r\n    }\r\n}\r\n\r\nTreeTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    columns: PropTypes.array,\r\n    onUpdate: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(TreeTable);\r\n\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport ExpertIcon from '@iobroker/adapter-react/icons/IconExpert';\r\n\r\nimport TreeTable from '../Components/TreeTable';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    tableDiv: {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        height: 'calc(100% - 48px)',\r\n    },\r\n    searchText: {\r\n        width: 150,\r\n        marginLeft: theme.spacing(1),\r\n        verticalAlign: 'middle'\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n});\r\n\r\nconst MOBILE_HEIGHT = 400;\r\nconst MOBILE_WIDTH  = 400;\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\r\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\r\n            showSelectId: false,\r\n            searchText: '',\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            helpHeight: 0\r\n        };\r\n\r\n        this.columns = [\r\n            {\r\n                title: I18n.t('ID'),\r\n                field: 'id',\r\n                editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }\r\n            },\r\n            {title: I18n.t('Smart names'), field: 'name.nicknames'},\r\n            {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }},\r\n            {\r\n                title: I18n.t('Type'),\r\n                field: 'type',\r\n                lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }\r\n            },\r\n            {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                }},\r\n\r\n            {\r\n                title: I18n.t('Attributes'),\r\n                field: 'displayAttributes',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                                  value={props.value}\r\n                                                  onChange={e => props.onChange(e.target.value)}\r\n                />\r\n            },\r\n            {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\r\n            {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '3rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n            },\r\n            {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )\r\n            },\r\n            { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )},\r\n        ];\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n        this.helpRef             = React.createRef();\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({message: I18n.t(error)});\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\r\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\r\n            }\r\n            return <FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\" startIcon={<IconCopy/>}>{I18n.t('Copy to clipboard')}</Button>\r\n                <Button startIcon={<IconClose/>} variant=\"contained\" onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    renderInstructions() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        if (this.state.helpHidden || this.props.smallDisplay || !desktop) {\r\n            return null;\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n        return <div style={{width: '100%'}} ref={this.helpRef}>\r\n            <div style={{marginTop: '4rem', display: 'flex'}}>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                    <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                </div>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\r\n                    <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div style={{flex: '100%'}}>\r\n                <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t('For help use this forum'))}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        return <Toolbar variant=\"dense\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                 onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            {desktop && !this.state.hideHelp ? <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Show/Hide help')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\r\n                     this.setState({helpHidden: !this.state.helpHidden});\r\n                 }} disabled={this.state.browse}><IconHelp/></Fab> : null }\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 size=\"small\"\r\n                 color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Toggle expert mode')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\r\n                     this.setState({expertMode: !this.state.expertMode});\r\n                 }} disabled={this.state.browse}><ExpertIcon/></Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            {!this.props.smallDisplay ? <TextField\r\n                className={this.props.classes.searchText}\r\n                label={I18n.t('Filter')}\r\n                value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.searchText ? (\r\n                        <IconButton onClick={() => this.setState({ searchText: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            /> : null}\r\n        </Toolbar>;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.helpRef.current) {\r\n            const h = this.helpRef.current.clientHeight;\r\n            if (this.state.helpHeight !== h) {\r\n                if (!this.state.helpHidden && h + 64 + 48 + 200 > window.innerHeight) {\r\n                    setTimeout(() => this.setState({helpHeight: h, helpHidden: true, hideHelp: true}), 50);\r\n                } else {\r\n                    setTimeout(() => this.setState({helpHeight: h}), 50);\r\n                }\r\n            }\r\n        } else if (this.state.helpHeight) {\r\n            setTimeout(() => this.setState({helpHeight: 0}), 50);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress  key=\"alexaProgress\" />;\r\n        }\r\n        const searchText = this.state.searchText.toLowerCase();\r\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\r\n            item.name?.name?.toLowerCase().includes(searchText) ||\r\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\r\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\r\n            : this.state.devices;\r\n\r\n        return <form key=\"gh\" className={this.props.classes.tab}>\r\n            {this.renderToolbar()}\r\n            {this.renderInstructions()}\r\n            <div className={this.props.classes.tableDiv} style={{height: `calc(100% - ${48 + (this.state.helpHeight ? this.state.helpHeight + 64 : 0)}px)`}}>\r\n                <TreeTable\r\n                    columns={this.state.expertMode ? this.columns : this.columns.filter(item => !item.expertMode)}\r\n                    data={devices}\r\n                    onUpdate={(newData, oldData) => {\r\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                            newData.name.nicknames = newData.name.nicknames.join(',');\r\n                        }\r\n                        this.editedSmartName = newData.name.nicknames;\r\n                        this.setState({editId: newData.id}, () => {\r\n                            if (!newData.type || !newData.displayTraits) {\r\n                                this.setState({browse: true, message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                            } else {\r\n                                this.setState({browse: true});\r\n                            }\r\n\r\n                            this.onGHParamsChange(newData, oldData);\r\n                            const devices = [...this.state.devices];\r\n                            devices[devices.indexOf(oldData)] = newData;\r\n                            this.setState({ ...this.state, devices});\r\n                        });\r\n                    }}\r\n\r\n                    onDelete={oldData => {\r\n                        // if smartenum set smartname on false if not delete/reset smartname content\r\n                        if (oldData.smartEnum === 'X') {\r\n                            this.setState({deleteId: oldData.id});\r\n                        } else {\r\n                            this.props.socket.getObject(oldData.id)\r\n                                .then(obj => {\r\n                                    if (obj && obj.common && obj.common['smartName']) {\r\n                                        delete obj.common['smartName']['ghTraits'];\r\n                                        delete obj.common['smartName']['ghType'];\r\n                                        delete obj.common['smartName']['ghAttributes'];\r\n                                    }\r\n                                    return this.props.socket.setObject(oldData.id, obj);\r\n                                });\r\n                        }\r\n\r\n                        return new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                if (this.state.deleteId) {\r\n                                    this.onDelete();\r\n                                } else {\r\n                                    this.informInstance(oldData.id);\r\n                                }\r\n                                resolve();\r\n                                const devices = [...this.state.devices];\r\n                                devices.splice(devices.indexOf(oldData), 1);\r\n                                this.setState({ ...this.state, devices });\r\n                            }, 600);\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n            {this.renderMessage()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport const withMediaQuery = () => Component => props =>\r\n    <Component smallDisplay={useMediaQuery('(max-width:600px)')} {...props} />;\r\n\r\nexport default withStyles(styles)(withMediaQuery()(GoogleSmartNames));\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        extendedProps.sentryDSN = window.sentryDSN;\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\r\n            .then(state => {\r\n                if (!state || !state.val) {\r\n                    this.setState({showAckTempPasswordDialog: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    renderAckTempPasswordDialog() {\r\n        if (!this.state.showAckTempPasswordDialog) {\r\n            return null;\r\n        } else {\r\n            return <Dialog\r\n                open={true}\r\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {I18n.t('The linking process has been changed for a few months.')}\r\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\r\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\r\n                        {I18n.t('Not understood')}\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() =>\r\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, {val: true, ack: true})\r\n                            .then(() =>\r\n                                this.setState({showAckTempPasswordDialog: false}))\r\n                    } color=\"primary\" autoFocus>\r\n                        {I18n.t('Roger that')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)} scrollButtons=\"auto\">\r\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        changed={this.state.changed}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />}\r\n                    {this.state.selectedTab === 'enums' && <TabEnums\r\n                        key=\"enums\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                    />}\r\n                    {this.state.selectedTab === 'alexa' && <TabAlexaSmartNames\r\n                        key=\"alexa\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                        {this.state.selectedTab === 'google' && <TabGoogleSmartNames\r\n                        key=\"google\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                    {this.state.selectedTab === 'alisa' && <TabAlisaSmartNames\r\n                        key=\"alisa\"\r\n                        themeType={this.state.themeType}\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />}\r\n                    {this.state.selectedTab === 'extended' && <TabExtended\r\n                        key=\"extended\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />}\r\n                    {this.state.selectedTab === 'services' && <TabServices\r\n                        key=\"services\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onShowError={error => this.showError(error)}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n                {this.renderAckTempPasswordDialog()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nwindow.sentryDSN = 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57';\r\n\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}