{"version":3,"sources":["Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Components/TreeTable.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","onAliveChanged","id","state","adapterName","instance","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","this","subscribeState","unsubscribeState","pass","length","match","I18n","t","title","attr","type","error","checkPassword","native","label","className","classes","input","value","helperText","onChange","e","target","margin","card","media","image","Utils","renderTextWithA","style","textAlign","variant","size","color","onClick","window","open","focus","amazonAlexa","onDebug","opacity","debugVisible","onMouseEnter","onMouseLeave","sendTo","data","file","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","forceUserCreate","ack","Promise","resolve","getObject","obj","common","enabled","setObject","catch","err","onError","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","close","Object","assign","paddingTop","controlElement","control","checked","tab","text","errorText","onLoad","clsx","column","columnSettings","renderInput","renderCheckbox","marginTop","googleHome","newVal","changed","hintUnsaved","button","disabled","resetCerts","startIcon","fontWeight","columnLogo","renderCard","renderToast","Component","withStyles","theme","width","minHeight","minWidth","marginRight","marginBottom","maxWidth","height","display","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","adminInstances","webInstances","getAdapterInstances","filter","item","auth","map","name","_id","split","pop","noTranslation","unshift","options","paddingRight","imagePrefix","selected","types","onOk","renderSelect","marginLeft","getSelectIdDialog","remote","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","list","nsList","replace","key","showError","chips","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","encodeURIComponent","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","padding","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","parse","i","find","smartName","getSmartNameFromObj","noCommon","disableSmartName","removeSmartName","addChanged","informInstance","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","enumLineSubName","enumLineId","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","fullWidth","autoFocus","changeSmartName","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","colorOn","colorOff","colorSet","colorRead","CHANGED_COLOR","DEFAULT_CHANNEL_COLOR_DARK","DEFAULT_CHANNEL_COLOR_LIGHT","LAST_CHANGED_COLOR_DARK","LAST_CHANGED_COLOR_LIGHT","actionsMapping","turnOn","icon","IconOn","desc","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","toString","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","result","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","el","devLine","devLineNumber","devLineExpand","onExpand","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","getActualTemperature","getActualHumidity","IconHumidity","getMotion","IconMotion","getContact","IconContact","AlisaDevices","includes","iobID","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","getAttr","lookup","shift","setAttr","descendingComparator","orderBy","_a","_b","TreeTable","opened","localStorage","getItem","Array","isArray","editMode","deleteMode","editData","order","columns","field","col","level","editable","cell","cellSecondary","cellStyle","component","v","parentId","children","it","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","scope","ii","renderCell","cellButton","newData","onUpdate","renderLine","property","isAsc","cellHeader","sortDirection","active","direction","handleRequestSort","visuallyHidden","table","array","comparator","stabilizedThis","index","stableSort","getComparator","tableContainer","stickyHeader","renderHead","React","paddingBottom","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","clip","GoogleSmartNames","myTableRef","createRef","expertMode","helpHidden","searchText","helpHeight","editComponent","rows","resize","helpRef","oldData","displayTraits","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","desktop","innerHeight","innerWidth","smallDisplay","manualModeHint","ref","flex","hideHelp","setItem","prevProps","prevState","snapshot","current","h","clientHeight","defaultNames","renderToolbar","renderInstructions","onGHParamsChange","smartEnum","useMediaQuery","App","extendedProps","encryptedFields","translations","require","sentryDSN","showAckTempPasswordDialog","selectedTab","yandexAlisa","loaded","default","getSelectedTab","selectTab","parentNode","dataset","scrollButtons","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","build","ReactDOM","render","onThemeChange","_theme","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52e46ba9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return <TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />;\n    }\n\n    renderCard() {\n        return <Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('https://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n                {this.props.native.amazonAlexa ?\n                    <Button\n                        title=\"Debug\"\n                        onClick={() => this.onDebug()}\n                        style={{opacity: this.state.debugVisible ? 1 : 0}}\n                        onMouseEnter={() => this.setState({debugVisible: true})}\n                        onMouseLeave={() => this.setState({debugVisible: false})}\n                    >Debug</Button> : null}\n            </CardActions>\n        </Card>;\n    }\n\n    onDebug() {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'debug', null)\n            .then(data => {\n                const file = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});\n                if (window.navigator.msSaveOrOpenBlob) // IE10+\n                    window.navigator.msSaveOrOpenBlob(file, 'debug.json');\n                else { // Others\n                    const a = document.createElement('a');\n                    const url = URL.createObjectURL(file);\n                    a.href = url;\n                    a.download = 'debug.json';\n                    document.body.appendChild(a);\n                    a.click();\n\n                    setTimeout(() => {\n                        document.body.removeChild(a);\n                        window.URL.revokeObjectURL(url);\n                    }, 0);\n                }\n            });\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) {\n            return null;\n        }\n        return <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={true}\n            autoHideDuration={6000}\n            onClose={() => this.setState({toast: ''})}\n            ContentProps={{\n                'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{this.state.toast}</span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={this.props.classes.close}\n                    onClick={() => this.setState({toast: ''})}\n                >\n                    <IconClose />\n                </IconButton>,\n            ]}\n        />;\n    }\n\n    renderCheckbox(title, attr, style) {\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />;\n    }\n\n    render() {\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                classes={{}}\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings) }>\n                { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                  style={{ marginTop: 5 }}\n                    control={\n                      <Checkbox\n                          checked={this.props.native.googleHome}\n                          onChange={() => {\n                              // activate alexa if google home is on (temporary)\n                              const newVal = !this.props.native.googleHome;\n                              this.props.onChange('googleHome', newVal, () =>\n                                  newVal && this.props.onChange('amazonAlexa', true));\n                          }}\n                          color=\"primary\"\n                      />\n                    }\n                    label={I18n.t('Google Home')}\n                />\n                {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                <br/>\n\n                <p>{I18n.t('new_certs_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts() }\n                        startIcon={<IconReload />}\n                >\n                    { I18n.t('Get new connection certificates') }\n                </Button>\n\n                <p>{I18n.t('new_credentials_tip')}</p>\n                {this.props.changed ?\n                    <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts(true) }\n                        startIcon={<IconReload />}\n                >\n                    { I18n.t('Create IoT credentials anew') }\n                </Button>\n                <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n            </div>\n            <div className={clsx(this.props.classes.column, this.props.classes.columnLogo)}>{this.renderCard() }</div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n            adminInstances: [],\n            webInstances: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.socket.getAdapterInstances('admin')\n            .then(adminInstances => {\n                // filter out instances with authentication\n                adminInstances = adminInstances\n                    .filter(item => !item.common.auth)\n                    .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\n\n                adminInstances.unshift({title: 'disabled', value: ''});\n\n                return this.props.socket.getAdapterInstances('web')\n                    .then(webInstances => {\n                        webInstances = webInstances\n                            .filter(item => !item.common.auth)\n                            .map(item => ({title: item.common.name + '.' + item._id.split('.').pop(), value: item.common.name + '.' + item._id.split('.').pop(), noTranslation: true}));\n\n                        webInstances.unshift({title: 'disabled', value: ''});\n\n                        this.setState({adminInstances, webInstances});\n                    });\n            });\n    }\n\n    renderInput(title, attr, type) {\n        return <TextField\n            label={I18n.t(title)}\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />;\n    }\n\n    renderSelect(title, attr, options, style) {\n        return <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={Object.assign({paddingTop: 5, paddingRight: 8}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => <MenuItem key={'key-' + item.value} value={item.value || '_'}>{item.noTranslation ? item.title : I18n.t(item.title)}</MenuItem>)}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>;\n    }\n\n    renderCheckbox(title, attr, style) {\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />;\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID2\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en', noTranslation: true},\n                    {title: 'Deutsch', value: 'de', noTranslation: true},\n                    {title: 'русский', value: 'ru', noTranslation: true}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Allow remote access', 'remote')}\n                    {this.props.native.remote ? this.renderSelect('Admin instance', 'remoteAdminInstance', this.state.adminInstances, {width: 120, minWidth: 120}) : null}\n                    {this.props.native.remote ? this.renderSelect('Web instance', 'remoteWebInstance', this.state.webInstances, {width: 120, minWidth: 120}) : null}\n                </div>\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/icons/IconCopy';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return <TextField\n            label={I18n.t(title)}\n            className={clsx(this.props.classes.input, this.props.classes.controlElement)}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />;\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID3\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return <div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word => <Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />)}\n            </div>\n        </div>;\n    }\n\n    render() {\n        return <form className={this.props.classes.tab}>\n            <Button\n                variant=\"outlined\"\n                disabled={!this.state.isInstanceAlive || this.state.running}\n                color=\"primary\"\n                title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                onClick={() => this.reissueUrlKey()}\n                startIcon={<IconRefresh />}\n            >\n                {I18n.t('Get new service URL key')}\n            </Button><br/>\n\n            {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n            <TextField\n                style={{marginTop: 10}}\n                label={I18n.t('Use following link for IFTTT')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\n                value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            />\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n            <br/>\n\n            {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n            <TextField\n                style={{marginTop: 10}}\n                label={I18n.t('Use following link for custom service')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.fullSize)}\n                value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            />\n            <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\n                <Select\n                    value={this.props.native.text2command || '_'}\n                    onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                    input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                >\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                    {this.state.text2commandList.map(item => <MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>)}\n                </Select>\n                <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n            </FormControl>\n            <br/>\n            <FormControl className={clsx(this.props.classes.input, this.props.classes.controlElement)} style={{paddingTop: 20}}>\n                <Select\n                    value={this.props.native.nightscout || '_'}\n                    onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                    input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                >\n                    <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                    {this.state.nightscoutList.map(item => <MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>)}\n                </Select>\n                <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n            </FormControl>\n            {this.props.native.nightscout ? <TextField\n                style={{marginTop: 3.5}}\n                label={I18n.t('Nightscout password')}\n                onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\n                value={this.props.native.nightscoutPass}\n                type=\"text\"\n                margin=\"normal\"\n            /> : null}\n            {this.props.native.nightscout ? <TextField\n                style={{marginTop: 3.5}}\n                label={I18n.t('Nightscout api-secret')}\n                className={clsx(this.props.classes.input, this.props.classes.controlElement, this.props.classes.normalSize)}\n                value={this.calcNightscoutSecret()}\n                type=\"text\"\n                readOnly={true}\n                margin=\"normal\"\n            /> : null}\n            <br/>\n            <br/>\n            <div className={this.props.classes.controlElement}>\n                <TextField\n                    label={I18n.t('Read blood sugar from')}\n                    className={clsx(this.props.classes.input, this.props.classes.controlElement)}\n                    value={this.props.native.amazonAlexaBlood || ''}\n                    type=\"text\"\n                    onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                <FormControlLabel  className={this.props.classes.controlElement}\n                    control={\n                        <Checkbox\n                            style={{paddingLeft: 30}}\n                            checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                            onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={I18n.t('Short answer for blood sugar')}\n                />\n            </div>\n            <br/>\n            {this.renderToast()}\n            {this.getSelectIdDialog('amazonAlexaBlood')}\n        </form>;\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconClose from \"@material-ui/icons/Close\";\nimport IconCheck from \"@material-ui/icons/Check\";\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                res && Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return <div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? <span className={this.props.classes.enumLineSubName}> ({name})</span> : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>;\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return <Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.changeSmartName()}\n                        color=\"primary\"\n                        startIcon={<IconCheck/>}\n                    >{I18n.t('Ok')}</Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.setState({editId: ''})}\n                        startIcon={<IconClose/>}\n                    >{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\nimport {MdList as IconList} from 'react-icons/md';\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\nimport IconCopy from '@material-ui/icons/FileCopy';\nimport IconClose from '@material-ui/icons/Close';\nimport IconCheck from '@material-ui/icons/Check';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport copy from \"copy-to-clipboard\";\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    },\n    headerRow: {\n        paddingLeft: theme.spacing(1),\n        background: theme.palette.primary.main,\n    },\n    headerCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n    tableCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editedSmartType: null,\n            editObjectName: '',\n            deleteId: '',\n\n            showListOfDevices: false,\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) {\n            return;\n        }\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n                    console.log('BROWSE received.');\n\n                    this.setState({\n                        devices: list,\n                        loading: false,\n                        changed: [],\n                        browse: false\n                    });\n\n                    if (list.length > 300) {\n                        this.props.onError(I18n.t('Too many devices (%s) configured. Max number is 300', list.length));\n                    }\n                }\n            })\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? `${state.val}/${state.ack}` : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            this.devTimer && clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    let editedSmartType = null;\n                    if (!device.additionalApplianceDetails.group) {\n                        editedSmartType = device.additionalApplianceDetails.smartType;\n                    }\n\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push(<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>);\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\n            }\n            return <FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>;\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectTypeSelector(type, onChange) {\n        if (type !== false) {\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\n            }\n            return <FormControl>\n                <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n            </FormControl>;\n        } else {\n            return '';\n        }\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n                        }\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>);\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n            }\n            result.push(<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={clsx(this.props.classes.devLineActions, this.props.classes.channelLineActions)} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>);\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = <span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>;\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            try {\n                channels && Object.keys(channels).forEach(chan =>\n                    chan && channels[chan].forEach(el => {\n                        if (this.state.changed.indexOf(el.id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === el.id) {\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n                        }\n                    })\n                );\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        return [\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        <Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? <IconCollapse/> : <IconExpand />}\n                        </Badge> :\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton> : null}\n                {!dev.additionalApplianceDetails.group ?\n                    <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton> : null}\n            </div>,\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            const editedSmartType = this.state.editedSmartType;\n\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return <Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        autoFocus\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.changeSmartName()}\n                        color=\"primary\"\n                        startIcon={<IconCheck/>}\n                    >{I18n.t('Ok')}\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}\n                    startIcon={<IconClose/>}\n                    >{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>;\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return <Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.onDelete()}\n                        color=\"primary\"\n                        autoFocus\n                        startIcon={<IconDelete/>}\n                    >{I18n.t('Delete')}</Button>\n                    <Button\n                        variant=\"contained\"\n                        startIcon={<IconClose/>}\n                        onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>;\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID1\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\n    }\n\n    renderListOfDevices() {\n        if (!this.state.showListOfDevices) {\n            return null;\n        }\n        const classes = this.props.classes;\n\n        return <Dialog\n            open={true}\n            maxWidth=\"xl\"\n            fullWidth\n            onClose={() => this.setState({showListOfDevices: false})}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\n            <DialogContent>\n                <div className={ classes.headerRow } >\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\n                </div>\n                <div className={ this.props.classes.tableDiv } >\n                    { this.state.devices.map((item, i) => <div key={i}>\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\n                    </div>)\n                    }\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" onClick={() => {\n                    this.setState({showListOfDevices: false});\n                    const lines = this.state.devices.map(item => item.friendlyName);\n                    copy(lines.join('\\n'));\n                }} color=\"primary\"\n                startIcon={<IconCopy/>}\n                >{I18n.t('Copy to clipboard')}</Button>\n                <Button variant=\"contained\"\n                        startIcon={<IconClose/>}\n                        onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\n            </DialogActions>\n        </Dialog>;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress  key=\"alexaProgress\" />;\n        }\n\n        return <form key=\"alexa\" className={this.props.classes.tab}>\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\n            <Fab style={{marginLeft: '1rem'}}\n                 title={I18n.t('Show all devices for print out')}\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\n            <TextField\n                placeholder={I18n.t('Filter')}\n                className={this.state.filter}\n                value={this.state.filter}\n                onChange={e => this.setState({filter: e.target.value})}\n                InputProps={{\n                    endAdornment: this.state.filter ?\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\n                            <IconClear />\n                        </IconButton> : undefined,\n                }}\n            />\n            {this.renderDevices()}\n            {this.renderMessage()}\n            {this.renderEditDialog()}\n            {this.getSelectIdDialog()}\n            {this.renderConfirmDialog()}\n            {this.renderListOfDevices()}\n        </form>;\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\nimport {FaTint as IconHumidity} from 'react-icons/fa';\r\nimport {FaMale as IconMotion} from 'react-icons/fa';\r\nimport {FaLink as IconContact} from 'react-icons/fa';\r\nimport IconCopy from '@material-ui/icons/FileCopy';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\nimport IconCheck from \"@material-ui/icons/Check\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n\r\n    getActualTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n    getActualHumidity: {color: colorRead, icon: IconHumidity, desc: 'Get actual humidity'},\r\n\r\n    getMotion: {color: colorRead, icon: IconMotion, desc: 'Get motion'},\r\n    getContact: {color: colorRead, icon: IconContact, desc: 'Get contact'},\r\n\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (!changed.includes(id)) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push(<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>);\r\n            }\r\n            return <FormControl>\r\n                <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n            </FormControl>;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId || dev.iobID;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push(<div key={'sub' + id + '_' + lineNum} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? <div className={classes.devSubLineSetId}>{dev.main.setId}</div> : null}\r\n            </div>\r\n        </div>);\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push(<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? <div className={classes.devSubLineSetId}>{attr.setId}</div> : null}\r\n                </div>\r\n            </div>);\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push(<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={clsx(this.props.classes.devLineActions,this.props.classes.channelLineActions)}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? <span className={classes.devSubSubLineName}>{id}</span> : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return <div key={lineNum}>{JSON.stringify(dev)}</div>;\r\n        const expanded = this.state.expanded.includes(dev.name);\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.includes(dev.iobID);\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            <div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        <Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? <IconCollapse/> : <IconExpand />}</Badge> :\r\n                        (expanded ? <IconCollapse/> : <IconExpand />)}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? <CircularProgress className={this.props.classes.devLineProgress} size={20}/> : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>,\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                // update obj\r\n                .then(() => this.informInstance(id))\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        autoFocus\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.changeSmartName()}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCheck/>}\r\n                    >{I18n.t('Ok')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<IconClose/>}\r\n                        onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return <Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.onDelete()}\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                        startIcon={<IconDelete/>}\r\n                    >{I18n.t('Delete')}</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => this.setState({showConfirmation: ''})}\r\n                        startIcon={<IconClose/>}\r\n                    >{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) {\r\n                continue;\r\n            }\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return <div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>;\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }}\r\n                        color=\"primary\"\r\n                        startIcon={<IconCopy/>}\r\n                >{I18n.t('Copy to clipboard')}</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<IconClose/>}\r\n                    onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress key=\"alexaProgress\" />;\r\n        }\r\n\r\n        return <form key=\"alexa\" className={this.props.classes.tab}>\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                  onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            <TextField\r\n                placeholder={I18n.t('Filter')}\r\n                className={this.state.filter}\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.filter ? (\r\n                        <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            />\r\n            {this.renderDevices()}\r\n            {this.renderMessage()}\r\n            {this.renderEditDialog()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport IconEdit from '@material-ui/icons/Edit';\nimport IconDelete from '@material-ui/icons/Delete';\nimport IconExpand from '@material-ui/icons/NavigateNext';\nimport IconCollapse from '@material-ui/icons/ExpandMore';\nimport IconCheck from '@material-ui/icons/Check';\nimport IconClose from '@material-ui/icons/Close';\n\nfunction getAttr(obj, attr, lookup) {\n    if (typeof attr === 'string') {\n        attr = attr.split('.');\n    }\n\n    if (!obj) {\n        return null;\n    }\n\n    if (attr.length === 1) {\n        if (lookup && lookup[obj[attr[0]]]) {\n            return lookup[obj[attr[0]]];\n        } else {\n            return obj[attr[0]];\n        }\n    } else {\n        const name = attr.shift();\n        return getAttr(obj[name], attr);\n    }\n}\n\nfunction setAttr(obj, attr, value) {\n    if (typeof attr === 'string') {\n        attr = attr.split('.');\n    }\n\n    if (attr.length === 1) {\n        return obj[attr[0]] = value;\n    } else {\n        const name = attr.shift();\n        if (obj[name] === null || obj[name] === undefined) {\n            obj[name] = {};\n        }\n        return setAttr(obj[name], attr, value);\n    }\n}\n\nconst styles = theme => ({\n    tableContainer: {\n        width: '100%',\n        height: '100%',\n        overflow: 'auto'\n    },\n    table: {\n        width: '100%',\n        minWidth: 800,\n        maxWidth: 1920,\n    },\n    cell: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 4,\n        paddingRight: 4,\n    },\n    rowMainWithChildren: {\n\n    },\n    rowMainWithoutChildren: {\n\n    },\n    rowNoEdit: {\n        opacity: 0.3\n    },\n    cellExpand: {\n        width: 30,\n    },\n    cellButton: {\n        width: 30,\n    },\n    cellHeader: {\n        fontWeight: 'bold',\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\n        height: 48,\n        wordBreak: 'break-word',\n        whiteSpace: 'pre',\n    },\n    width_name_nicknames: {\n        maxWidth: 150,\n    },\n    width_ioType: {\n        maxWidth: 100,\n    },\n    width_type: {\n        maxWidth: 100,\n    },\n    width_displayTraits: {\n        maxWidth: 100,\n    },\n    width_roomHint: {\n        maxWidth: 100,\n    },\n    rowSecondary: {\n        fontStyle: 'italic',\n    },\n    cellSecondary: {\n        fontSize: 10,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n});\n\nfunction descendingComparator(a, b, orderBy, lookup) {\n    const _a = getAttr(a, orderBy, lookup) || '';\n    const _b = getAttr(b, orderBy, lookup) || '';\n\n    if (_b < _a) {\n        return -1;\n    } else\n    if (_b > _a) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getComparator(order, orderBy, lookup) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order) {\n            return order;\n        } else {\n            return a[1] - b[1];\n        }\n    });\n\n    return stabilizedThis.map(el => el[0]);\n}\n\nclass TreeTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let opened = window.localStorage.getItem('iot.ghome.opened') || '[]';\n        try {\n            opened = JSON.parse(opened) || [];\n        } catch (e) {\n            opened = [];\n        }\n        if (!Array.isArray(opened)) {\n            opened = [];\n        }\n\n        this.state = {\n            opened,\n            editMode: false,\n            deleteMode: false,\n            editData: null,\n            order: 'asc',\n            orderBy: this.props.columns[0].field,\n        }\n    }\n\n    renderCell(item, col, level, i) {\n        if (this.state.editMode === i && col.editable !== 'never') {\n            let val = getAttr(item, col.field);\n            if (Array.isArray(val)) {\n                val = val[0];\n            }\n            return <TableCell\n                key={col.field}\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                style={col.cellStyle}\n                component=\"th\" >{\n                    col.lookup ?\n                        <Select\n                            onChange={e => {\n                                const editData = this.state.editData ? {...this.state.editData} : {};\n                                if (e.target.value === val) {\n                                    delete editData[col.field];\n                                } else {\n                                    editData[col.field] = e.target.value;\n                                }\n                                this.setState({editData});\n                            }}\n                            value={(this.state.editData && this.state.editData[col.field]) || val}\n                        >\n                            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\n                        </Select>\n                        :\n                        <TextField\n                            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\n                            onChange={e => {\n                                const editData = this.state.editData ? {...this.state.editData} : {};\n                                if (e.target.value === val) {\n                                    delete editData[col.field];\n                                } else {\n                                    editData[col.field] = e.target.value;\n                                }\n                                this.setState({editData});\n                            }}\n                        />\n            }</TableCell>;\n        } else {\n            return <TableCell\n                key={col.field}\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                style={col.cellStyle}\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\n        }\n    }\n\n    renderLine(item, level) {\n        level = level || 0;\n        const i = this.props.data.indexOf(item);\n        if (!item) {\n            return null;\n        }\n        if (!level && item.parentId) {\n            return null;\n        } else if (level && !item.parentId) {\n            return null; // should never happens\n        } else {\n            // try to find children\n            const children = this.props.data.filter(it => it.parentId === item.id);\n            const opened = this.state.opened.includes(item.id);\n\n            return [\n                <TableRow\n                    key={item.id}\n                    className={clsx(\n                        this.props.classes.row,\n                        level  && this.props.classes.rowSecondary,\n                        !level && children.length && this.props.classes.rowMainWithChildren,\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\n                    )}\n                >\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\n                        {children.length ? <IconButton onClick={() => {\n                            const opened = [...this.state.opened];\n                            const pos = opened.indexOf(item.id);\n                            if (pos === -1) {\n                                opened.push(item.id);\n                                opened.sort();\n                            } else {\n                                opened.splice(pos, 1);\n                            }\n\n                            this.setState({opened});\n                        }}>\n                                {opened ? <IconCollapse/> : <IconExpand/>}\n                            </IconButton>  : null}\n                    </TableCell>\n                    <TableCell scope=\"row\"\n                       className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                       style={this.props.columns[0].cellStyle}>\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\n                    </TableCell>\n                    {this.props.columns.map((col, ii) =>\n                        !ii ? null : this.renderCell(item, col, level, i))}\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\n                        {this.state.editMode === i || this.state.deleteMode === i ?\n                            <IconButton\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\n                                onClick={() => {\n                                if (this.state.editMode !== false) {\n                                    const newData = JSON.parse(JSON.stringify(item));\n                                    this.state.editData && Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\n                                    this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\n                                } else {\n                                    this.setState({deleteMode: false}, () => this.props.onDelete(item))\n                                }\n                            }}>\n                                <IconCheck/>\n                            </IconButton>\n                            :\n                            <IconButton\n                                disabled={this.state.editMode !== false}\n                                onClick={() => this.setState({editMode: i, editData: null})}>\n                                <IconEdit/>\n                            </IconButton>}\n                    </TableCell>\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\n                        {this.state.editMode === i || this.state.deleteMode === i ?\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\n                                <IconClose/>\n                            </IconButton>\n                            :\n                            <IconButton\n                                disabled={this.state.deleteMode !== false}\n                                onClick={() => this.setState({deleteMode: i})}>\n                                <IconDelete/>\n                            </IconButton>\n                        }\n                    </TableCell>\n                </TableRow>,\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\n            ];\n        }\n    }\n\n    handleRequestSort(property) {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\n    }\n\n    renderHead() {\n        return <TableHead>\n            <TableRow>\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}/>\n                <TableCell\n                    component=\"th\"\n                    className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\n                    style={this.props.columns[0].cellStyle}\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\n                >\n                    <TableSortLabel\n                        active={this.state.orderBy === this.props.columns[0].field}\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\n                    >\n                        {this.props.columns[0].title}\n                        {this.state.orderBy === this.props.columns[0].field ?\n                            <span className={this.props.classes.visuallyHidden}>\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                            </span> : null}\n                    </TableSortLabel>\n                </TableCell>\n                {this.props.columns.map((col, i) =>\n                    !i ? null : <TableCell\n                        key={col.field}\n                        className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\n                        style={col.cellStyle}\n                        component=\"th\"\n                    >\n                        <TableSortLabel\n                            active={this.state.orderBy === col.field}\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\n                            onClick={() => this.handleRequestSort(col.field)}\n                        >\n                            {col.title}\n                            {this.state.orderBy === col.field ?\n                                <span className={this.props.classes.visuallyHidden}>\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span> : null}\n                        </TableSortLabel>\n                </TableCell>)}\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\n            </TableRow>\n        </TableHead>;\n    }\n\n    render() {\n        const lookup = this.props.columns ? this.props.columns.find(col => col.field === this.state.orderBy).lookup : '';\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\n\n        return <div className={clsx(this.props.classes.tableContainer, this.props.className)}>\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\n                {this.renderHead()}\n                <TableBody>\n                    {table.map(item => this.renderLine(item))}\n                </TableBody>\n            </Table>\n        </div>;\n    }\n}\n\nTreeTable.propTypes = {\n    data: PropTypes.array.isRequired,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    columns: PropTypes.array,\n    onUpdate: PropTypes.func,\n    onDelete: PropTypes.func,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(TreeTable);\n\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\n\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport IconCopy from '@material-ui/icons/FileCopy';\nimport IconClose from '@material-ui/icons/Close';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport ExpertIcon from '@iobroker/adapter-react/icons/IconExpert';\n\nimport TreeTable from '../Components/TreeTable';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {MdList as IconList} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\n\nconst styles = theme => ({\n    tab: {\n        height: '100%',\n        overflow: 'hidden',\n    },\n    tableDiv: {\n        width: '100%',\n        overflow: 'hidden',\n        height: 'calc(100% - 48px)',\n    },\n    searchText: {\n        width: 150,\n        marginLeft: theme.spacing(1),\n        verticalAlign: 'middle'\n    },\n    headerRow: {\n        paddingLeft: theme.spacing(1),\n        background: theme.palette.primary.main,\n    },\n    headerCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '30%'\n    },\n    tableCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '30%'\n    },\n});\n\nconst MOBILE_HEIGHT = 400;\nconst MOBILE_WIDTH  = 400;\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n        this.myTableRef =  React.createRef();\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\n            showSelectId: false,\n            searchText: '',\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            helpHeight: 0\n        };\n\n        this.columns = [\n            {\n                title: I18n.t('ID'),\n                field: 'id',\n                editable: 'never',\n                cellStyle: {\n                    maxWidth: '12rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                }\n            },\n            {title: I18n.t('Smart names'), field: 'name.nicknames'},\n            {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                }},\n            {\n                title: I18n.t('Type'),\n                field: 'type',\n                lookup: {\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\n                    'action.devices.types.AWNING':          'Awning',\n                    'action.devices.types.BLINDS':          'Blinds',\n                    'action.devices.types.BOILER':          'Boiler',\n                    'action.devices.types.CAMERA':          'Camera',\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\n                    'action.devices.types.CURTAIN':         'Curtain',\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\n                    'action.devices.types.DOOR':            'Door',\n                    'action.devices.types.DRYER':           'Dryer',\n                    'action.devices.types.FAN':             'Fan',\n                    'action.devices.types.FIREPLACE':       'Fireplace',\n                    'action.devices.types.GARAGE':          'Garage',\n                    'action.devices.types.GATE':            'Gate',\n                    'action.devices.types.HEATER':          'Heater',\n                    'action.devices.types.HOOD':            'Hood',\n                    'action.devices.types.KETTLE':          'Kettle',\n                    'action.devices.types.LIGHT':           'Light',\n                    'action.devices.types.LOCK':            'Lock',\n                    'action.devices.types.MOP':             'Mop',\n                    'action.devices.types.MICROWAVE':       'Microwave',\n                    'action.devices.types.OUTLET':          'Outlet',\n                    'action.devices.types.OVEN':            'Oven',\n                    'action.devices.types.PERGOLA':         'Pergola',\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\n                    'action.devices.types.SCENE':           'Scene',\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\n                    'action.devices.types.SENSOR':          'Sensor',\n                    'action.devices.types.SHUTTER':         'Shutter',\n                    'action.devices.types.SHOWER':          'Shower',\n                    'action.devices.types.SPEAKER':         'Speaker',\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\n                    'action.devices.types.SWITCH':          'Switch',\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\n                    'action.devices.types.VACUUM':          'Vacuum',\n                    'action.devices.types.VALVE':           'Valve',\n                    'action.devices.types.WASHER':          'Washer',\n                    'action.devices.types.WATERHEATER':     'Water heater',\n                    'action.devices.types.WINDOW':          'Window'\n                }\n            },\n            {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\n                    'action.devices.traits.Brightness':     'Brightness',\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\n                    // 'action.devices.traits.Dock':        'Dock',\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\n                    // 'action.devices.traits.Locator':     'Locator',\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\n                    'action.devices.traits.Modes':          'Modes',\n                    'action.devices.traits.OnOff':          'OnOff',\n                    'action.devices.traits.OpenClose':      'OpenClose',\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\n                    'action.devices.traits.Scene':          'Scene',\n                    // 'action.devices.traits.Sensor':      'Sensor',\n                    'action.devices.traits.StartStop':      'StartStop',\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\n                    // 'action.devices.traits.Timer':       'Timer',\n                    'action.devices.traits.Toggles':        'Toggles',\n                    'action.devices.traits.Volume':         'Volume',\n                }},\n\n            {\n                title: I18n.t('Attributes'),\n                field: 'displayAttributes',\n                cellStyle: {\n                    maxWidth: '12rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                                  value={props.value}\n                                                  onChange={e => props.onChange(e.target.value)}\n                />\n            },\n            {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\n            {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\n                cellStyle: {\n                    maxWidth: '3rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n            },\n            {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => (\n                    <div>Conversation to Google Home = function(value)&#123; <br/>\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                  value={props.value}\n                                  onChange={e => props.onChange(e.target.value)}\n                        />\n                        &#125;\n                    </div>\n                )\n            },\n            { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => (\n                    <div>Conversation to ioBroker = function(value)&#123; <br/>\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                  value={props.value}\n                                  onChange={e => props.onChange(e.target.value)}\n                        />\n                        &#125;\n                    </div>\n                )},\n        ];\n\n        this.timerChanged        = null;\n        this.browseTimer         = null;\n        this.browseTimerCount    = 0;\n        this.editedSmartName     = '';\n\n        this.waitForUpdateID     = null;\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n        this.helpRef             = React.createRef();\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\n                }\n            })\n            .catch(error => {\n                this.setState({message: I18n.t(error)});\n            });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                <MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>,\n                <MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push(<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>);\n            }\n            return <FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>;\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                    if (!obj || !obj.common) {\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\n                    }\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\n                        try {\n                            if (obj.common.smartName.ghAttributes) {\n                                JSON.parse(obj.common.smartName.ghAttributes)\n                            }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\n                        }\n                    }\n                    if (newData.conv2GH) {\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\n                    }\n                    if (newData.conv2iob) {\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectGoogle\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                if (!obj.common) {\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\n                                }\n\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                if (!obj.common.smartName) {\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\n                                } else {\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\n                                    })\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderListOfDevices() {\n        if (!this.state.showListOfDevices) {\n            return null;\n        }\n        const classes = this.props.classes;\n\n        return <Dialog\n            open={true}\n            maxWidth=\"xl\"\n            fullWidth\n            onClose={() => this.setState({showListOfDevices: false})}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\n            <DialogContent>\n                <div className={ classes.headerRow } >\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\n                </div>\n                <div className={ this.props.classes.tableDiv } >\n                    { this.state.devices.map((item, i) => <div key={i}>\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\n                        </div>)\n                    }\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" onClick={() => {\n                    this.setState({showListOfDevices: false});\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\n                    copy(lines.join('\\n'));\n                }} color=\"primary\" startIcon={<IconCopy/>}>{I18n.t('Copy to clipboard')}</Button>\n                <Button startIcon={<IconClose/>} variant=\"contained\" onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\n            </DialogActions>\n        </Dialog>;\n    }\n\n    renderInstructions() {\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\n\n        if (this.state.helpHidden || this.props.smallDisplay || !desktop) {\n            return null;\n        }\n\n        const manualModeHint = I18n.t('manualModeHint');\n        return <div style={{width: '100%'}} ref={this.helpRef}>\n            <div style={{marginTop: '4rem', display: 'flex'}}>\n                <div style={{flex: '50%'}}>\n                    <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\n                    <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n                </div>\n                <div style={{flex: '50%'}}>\n                    <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\n                    <span>{Utils.renderTextWithA(manualModeHint)}</span>\n                </div>\n            </div>\n            <br/>\n            <div style={{flex: '100%'}}>\n                <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t('For help use this forum'))}</div>\n            </div>\n        </div>;\n    }\n\n    renderToolbar() {\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\n\n        return <Toolbar variant=\"dense\">\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n            <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                 onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\n            {desktop && !this.state.hideHelp ? <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\n                 title={I18n.t('Show/Hide help')}\n                 onClick={() => {\n                     window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\n                     this.setState({helpHidden: !this.state.helpHidden});\n                 }} disabled={this.state.browse}><IconHelp/></Fab> : null }\n            <Fab style={{marginLeft: '1rem'}}\n                 size=\"small\"\n                 color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\n                 title={I18n.t('Toggle expert mode')}\n                 onClick={() => {\n                     window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\n                     this.setState({expertMode: !this.state.expertMode});\n                 }} disabled={this.state.browse}><ExpertIcon/></Fab>\n            <Fab style={{marginLeft: '1rem'}}\n                 title={I18n.t('Show all devices for print out')}\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\n            {!this.props.smallDisplay ? <TextField\n                className={this.props.classes.searchText}\n                label={I18n.t('Filter')}\n                value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\n                InputProps={{\n                    endAdornment: this.state.searchText ? (\n                        <IconButton onClick={() => this.setState({ searchText: '' })}>\n                            <IconClear />\n                        </IconButton>\n                    ) : undefined,\n                }}\n            /> : null}\n        </Toolbar>;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.helpRef.current) {\n            const h = this.helpRef.current.clientHeight;\n            if (this.state.helpHeight !== h) {\n                if (!this.state.helpHidden && h + 64 + 48 + 200 > window.innerHeight) {\n                    setTimeout(() => this.setState({helpHeight: h, helpHidden: true, hideHelp: true}), 50);\n                } else {\n                    setTimeout(() => this.setState({helpHeight: h}), 50);\n                }\n            }\n        } else if (this.state.helpHeight) {\n            setTimeout(() => this.setState({helpHeight: 0}), 50);\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress  key=\"alexaProgress\" />;\n        }\n        const searchText = this.state.searchText.toLowerCase();\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\n            item.name?.name?.toLowerCase().includes(searchText) ||\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\n            : this.state.devices;\n\n        return <form key=\"gh\" className={this.props.classes.tab}>\n            {this.renderToolbar()}\n            {this.renderInstructions()}\n            <div className={this.props.classes.tableDiv} style={{height: `calc(100% - ${48 + (this.state.helpHeight ? this.state.helpHeight + 64 : 0)}px)`}}>\n                <TreeTable\n                    columns={this.state.expertMode ? this.columns : this.columns.filter(item => !item.expertMode)}\n                    data={devices}\n                    onUpdate={(newData, oldData) => {\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\n                            newData.name.nicknames = newData.name.nicknames.join(',');\n                        }\n                        this.editedSmartName = newData.name.nicknames;\n                        this.setState({editId: newData.id}, () => {\n                            if (!newData.type || !newData.displayTraits) {\n                                this.setState({browse: true, message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                            } else {\n                                this.setState({browse: true});\n                            }\n\n                            this.onGHParamsChange(newData, oldData);\n                            const devices = [...this.state.devices];\n                            devices[devices.indexOf(oldData)] = newData;\n                            this.setState({ ...this.state, devices});\n                        });\n                    }}\n\n                    onDelete={oldData => {\n                        // if smartenum set smartname on false if not delete/reset smartname content\n                        if (oldData.smartEnum === 'X') {\n                            this.setState({deleteId: oldData.id});\n                        } else {\n                            this.props.socket.getObject(oldData.id)\n                                .then(obj => {\n                                    if (obj && obj.common && obj.common['smartName']) {\n                                        delete obj.common['smartName']['ghTraits'];\n                                        delete obj.common['smartName']['ghType'];\n                                        delete obj.common['smartName']['ghAttributes'];\n                                    }\n                                    return this.props.socket.setObject(oldData.id, obj);\n                                });\n                        }\n\n                        return new Promise(resolve => {\n                            setTimeout(() => {\n                                if (this.state.deleteId) {\n                                    this.onDelete();\n                                } else {\n                                    this.informInstance(oldData.id);\n                                }\n                                resolve();\n                                const devices = [...this.state.devices];\n                                devices.splice(devices.indexOf(oldData), 1);\n                                this.setState({ ...this.state, devices });\n                            }, 600);\n                        })\n                    }}\n                />\n            </div>\n            {this.renderMessage()}\n            {this.getSelectIdDialog()}\n            {this.renderListOfDevices()}\n        </form>;\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common:      PropTypes.object.isRequired,\n    native:      PropTypes.object.isRequired,\n    instance:    PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError:     PropTypes.func,\n    onLoad:      PropTypes.func,\n    onChange:    PropTypes.func,\n    socket:      PropTypes.object.isRequired,\n    themeType:   PropTypes.string.isRequired,\n};\n\nexport const withMediaQuery = () => Component => props =>\n    <Component smallDisplay={useMediaQuery('(max-width:600px)')} {...props} />;\n\nexport default withStyles(styles)(withMediaQuery()(GoogleSmartNames));\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n\n        extendedProps.sentryDSN = window.sentryDSN;\n\n        super(props, extendedProps);\n    }\n\n    onConnectionReady() {\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\n            .then(state => {\n                if (!state || !state.val) {\n                    this.setState({showAckTempPasswordDialog: true});\n                }\n            });\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    renderAckTempPasswordDialog() {\n        if (!this.state.showAckTempPasswordDialog) {\n            return null;\n        } else {\n            return <Dialog\n                open={true}\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {I18n.t('The linking process has been changed for a few months.')}\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\n                        {I18n.t('Not understood')}\n                    </Button>\n                    <Button variant=\"contained\" onClick={() =>\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, {val: true, ack: true})\n                            .then(() =>\n                                this.setState({showAckTempPasswordDialog: false}))\n                    } color=\"primary\" autoFocus>\n                        {I18n.t('Roger that')}\n                    </Button>\n                </DialogActions>\n            </Dialog>;\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <MuiThemeProvider theme={this.state.theme}>\n                <Loader theme={this.state.themeType} />\n            </MuiThemeProvider>;\n        }\n\n        return <MuiThemeProvider theme={this.state.theme}>\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)} scrollButtons=\"auto\">\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        changed={this.state.changed}\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    />}\n                    {this.state.selectedTab === 'enums' && <TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />}\n                    {this.state.selectedTab === 'alexa' && <TabAlexaSmartNames\n                        key=\"alexa\"\n                        themeType={this.state.themeType}\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />}\n                        {this.state.selectedTab === 'google' && <TabGoogleSmartNames\n                        key=\"google\"\n                        themeType={this.state.themeType}\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />}\n                    {this.state.selectedTab === 'alisa' && <TabAlisaSmartNames\n                        key=\"alisa\"\n                        themeType={this.state.themeType}\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />}\n                    {this.state.selectedTab === 'extended' && <TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />}\n                    {this.state.selectedTab === 'services' && <TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n                {this.renderAckTempPasswordDialog()}\n            </div>\n        </MuiThemeProvider>;\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'iot';\nwindow.sentryDSN = 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57';\n\nlet themeName = Utils.getThemeName();\n\nconsole.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}