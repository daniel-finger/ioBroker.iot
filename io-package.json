{
  "common": {
    "name": "iot",
    "version": "1.11.7",
    "news": {
      "1.11.7": {
        "en": "Tried to correct URL key creation for Google home",
        "de": "Versuche, die URL-Schlüssel-Erstellung für Google Home zu korrigieren",
        "ru": "Попробовал исправить создание ключа URL для дома Google",
        "pt": "Tentei corrigir a criação de chaves URL para o Google home",
        "nl": "Geprobeerd om de sleutel te corrigeren voor Google thuis",
        "fr": "Trié pour corriger la création de clé URL pour Google home",
        "it": "Ho cercato di correggere la creazione di chiave URL per la casa di Google",
        "es": "Trató de corregir la creación de clave URL para Google home",
        "pl": "Poprawić kluczową rolę URL w Google home",
        "zh-cn": "纠正谷歌家的关键创建"
      },
      "1.11.5": {
        "en": "Alisa: update for binary-sensor \"motion\" and \"contact\"",
        "de": "Alisa: Update für Binärsensor „Bewegung“ und „Kontakt“",
        "ru": "Алиса: обновление для бинарного датчика \"движения\" и \"контакта\"",
        "pt": "Alisa: atualização para \"movimento\" e \"contato\" do sensor binário",
        "nl": "Alisa: update voor binaire sensor \"beweging\" en \"contact\"",
        "fr": "Alisa : mise à jour pour les capteurs binaires \"mouvement\" et \"contact\"",
        "it": "Alisa: aggiornamento per sensore binario \"movimento\" e \"contatto\"",
        "es": "Alisa: actualización para sensor binario \"movimiento\" y \"contacto\"",
        "pl": "Alisa: aktualizacja czujnika binarnego „ruchu” i „kontaktu”",
        "zh-cn": "Alisa：二进制传感器“运动”和“接触”的更新"
      },
      "1.11.4": {
        "en": "Fix crash cases reported by Sentry",
        "de": "Von Sentry gemeldete Absturzfälle beheben",
        "ru": "Исправить случаи сбоев, о которых сообщил Sentry",
        "pt": "Corrigir casos de travamento relatados pelo Sentinela",
        "nl": "Herstel crashgevallen gemeld door Sentry",
        "fr": "Correction des cas de plantage signalés par Sentry",
        "it": "Risolvi i casi di crash segnalati da Sentry",
        "es": "Solucionar casos de fallas informados por Sentry",
        "pl": "Napraw przypadki awarii zgłoszone przez Sentry",
        "zh-cn": "修复 Sentry 报告的崩溃案例"
      },
      "1.11.3": {
        "en": "Added the generation of URL key for services",
        "de": "Generierung von URL-Schlüsseln für Dienste hinzugefügt",
        "ru": "Добавлена генерация URL-ключа для сервисов",
        "pt": "Adicionada a geração de chave de URL para serviços",
        "nl": "Het genereren van de URL-sleutel voor services toegevoegd",
        "fr": "Ajout de la génération de clé URL pour les services",
        "it": "Aggiunta la generazione della chiave URL per i servizi",
        "es": "Se agregó la generación de clave de URL para servicios.",
        "pl": "Dodano generowanie klucza URL dla usług",
        "zh-cn": "为服务添加了 URL 密钥的生成"
      },
      "1.11.2": {
        "en": "Fix crash case reported by Sentry (IOBROKER-IOT-3P)",
        "de": "Von Sentry gemeldeter Absturzfall behoben (IOBROKER-IOT-3P)",
        "ru": "Исправить случай сбоя, о котором сообщил Sentry (IOBROKER-IOT-3P)",
        "pt": "Corrigir caso de falha relatado pelo Sentry (IOBROKER-IOT-3P)",
        "nl": "Herstel crashgeval gemeld door Sentry (IOBROKER-IOT-3P)",
        "fr": "Correction d'un cas de plantage signalé par Sentry (IOBROKER-IOT-3P)",
        "it": "Risolto il caso di crash segnalato da Sentry (IOBROKER-IOT-3P)",
        "es": "Solucionar caso de bloqueo informado por Sentry (IOBROKER-IOT-3P)",
        "pl": "Napraw przypadek awarii zgłoszony przez Sentry (IOBROKER-IOT-3P)",
        "zh-cn": "修复 Sentry 报告的崩溃案例 (IOBROKER-IOT-3P)"
      },
      "1.11.1": {
        "en": "Optimize logging when many devices are used",
        "de": "Optimieren Sie die Protokollierung, wenn viele Geräte verwendet werden",
        "ru": "Оптимизируйте ведение журнала, когда используется много устройств",
        "pt": "Otimize o registro quando muitos dispositivos são usados",
        "nl": "Logboekregistratie optimaliseren wanneer veel apparaten worden gebruikt",
        "fr": "Optimiser la journalisation lorsque de nombreux appareils sont utilisés",
        "it": "Ottimizza la registrazione quando vengono utilizzati molti dispositivi",
        "es": "Optimice el registro cuando se utilizan muchos dispositivos",
        "pl": "Zoptymalizuj rejestrowanie, gdy używanych jest wiele urządzeń",
        "zh-cn": "使用多个设备时优化日志记录"
      },
      "1.11.0": {
        "en": "Also support \"stored\" when a rgb state is turned on/off\nFix control percent value to respect min/max correctly\nSupport of response messages longer than 128k (zip)",
        "de": "Unterstützt auch „gespeichert“, wenn ein RGB-Status ein-/ausgeschaltet ist\nKorrigieren Sie den Kontrollprozentwert, um Min/Max korrekt einzuhalten\nUnterstützung von Antwortnachrichten, die länger als 128 KB (zip) sind",
        "ru": "Также поддерживает «хранится», когда состояние rgb включено/выключено.\nИсправьте контрольное процентное значение, чтобы правильно соблюдать минимальное / максимальное значение.\nПоддержка ответных сообщений длиннее 128k (zip)",
        "pt": "Também suporta \"armazenado\" quando um estado rgb é ativado/desativado\nCorrija o valor percentual de controle para respeitar o mínimo/máximo corretamente\nSuporte de mensagens de resposta com mais de 128k (zip)",
        "nl": "Ondersteun ook \"opgeslagen\" wanneer een rgb-status is in-/uitgeschakeld\nCorrigeer de controlepercentagewaarde om min/max correct te respecteren\nOndersteuning van antwoordberichten langer dan 128k (zip)",
        "fr": "Prend également en charge \"stocké\" lorsqu'un état RVB est activé/désactivé\nCorrection de la valeur du pourcentage de contrôle pour respecter correctement les min/max\nPrise en charge des messages de réponse de plus de 128k (zip)",
        "it": "Supporta anche \"memorizzato\" quando uno stato rgb è attivato/disattivato\nFissare il valore percentuale di controllo per rispettare correttamente min/max\nSupporto di messaggi di risposta più lunghi di 128k (zip)",
        "es": "También es compatible con \"almacenado\" cuando se activa o desactiva un estado rgb\nFijar el valor porcentual de control para respetar min/max correctamente\nSoporte de mensajes de respuesta de más de 128k (zip)",
        "pl": "Obsługuje również „przechowywane”, gdy stan rgb jest włączony/wyłączony\nNapraw wartość procentową kontroli, aby poprawnie przestrzegać min/maks.\nObsługa wiadomości odpowiedzi dłuższych niż 128k (zip)",
        "zh-cn": "还支持打开/关闭 rgb 状态时的“存储”\n修复控制百分比值以正确尊重最小值/最大值\n支持超过 128k (zip) 的响应消息"
      }
    },
    "title": "IoT Assistants",
    "titleLang": {
      "en": "IoT cloud connection",
      "de": "Cloud IoT-Verbindung",
      "ru": "Соединение Cloud IoT",
      "pt": "Conexão Cloud IoT",
      "nl": "Cloud IoT-verbinding",
      "fr": "Connexion Cloud IoT",
      "it": "Connessione Cloud IoT",
      "es": "Conexión IoT en la nube",
      "pl": "Połączenie Cloud IoT",
      "zh-cn": "IoT云连接"
    },
    "desc": {
      "en": "Connects your ioBroker server to the ioBroker IoT cloud",
      "de": "Verbindet Ihren ioBroker-Server mit der ioBroker IoT-Cloud",
      "ru": "Соединяет ваш сервер ioBroker с облаком ioBroker IoT",
      "pt": "Conecta seu servidor ioBroker à nuvem IoT do ioBroker",
      "nl": "Verbindt uw ioBroker-server met de ioBroker IoT-cloud",
      "fr": "Connecte votre serveur ioBroker au cloud ioBroker IoT",
      "it": "Collega il tuo server ioBroker al cloud IoT IoBroker",
      "es": "Conecta su servidor ioBroker a la nube ioBroker IoT",
      "pl": "Łączy twój serwer ioBroker z chmurą IoT ioBroker",
      "zh-cn": "连接你的ioBroker服务器的ioBroker IoT云"
    },
    "authors": [
      "bluefox <dogafox@gmail.com>"
    ],
    "license": "MIT",
    "platform": "Javascript/Node.js",
    "mode": "daemon",
    "loglevel": "info",
    "readme": "https://github.com/ioBroker/ioBroker.iot/blob/master/README.md",
    "icon": "iot.png",
    "connectionType": "cloud",
    "dataSource": "push",
    "tier": 3,
    "keywords": [
      "web",
      "Cloud",
      "communication"
    ],
    "enabled": false,
    "compact": true,
    "extIcon": "https://raw.githubusercontent.com/ioBroker/ioBroker.iot/master/admin/iot.png",
    "type": "communication",
    "messagebox": true,
    "stopBeforeUpdate": true,
    "materialize": true,
    "logTransporter": true,
    "dependencies": [
      {
        "admin": ">=4.0.1"
      },
      {
        "js-controller": ">=3.3.22"
      }
    ],
    "preserveSettings": "smartName",
    "eraseOnUpload": true,
    "blockly": true,
    "osDependencies": {
      "linux": [
        "libcairo2-dev",
        "libpango1.0-dev",
        "libjpeg-dev",
        "libgif-dev",
        "librsvg2-dev"
      ]
    },
    "plugins": {
      "sentry": {
        "dsn": "https://20987eaf91ef49de821771499fdb4e1a@sentry.iobroker.net/40"
      }
    }
  },
  "protectedNative": [
    "login",
    "pass"
  ],
  "native": {
    "login": "email.com",
    "pass": "",
    "language": "",
    "cloudUrl": "a18wym7vjdl22g.iot.eu-west-1.amazonaws.com",
    "functionFirst": false,
    "concatWord": "",
    "responseOID": "",
    "restartOnDisconnect": false,
    "iftttKey": "",
    "replaces": "",
    "amazonAlexa": true,
    "amazonAlexaBlood": "",
    "amazonAlexaBloodShortAnswer": false,
    "googleHome": false,
    "yandexAlisa": false,
    "allowedServices": "",
    "text2command": "0",
    "nightscout": "",
    "nightscoutPass": "myBlood",
    "noCommon": false,
    "debug": false,
    "remote": false,
    "remoteAdminInstance": "",
    "remoteWebInstance": ""
  },
  "objects": [],
  "instanceObjects": [
    {
      "_id": "info",
      "type": "channel",
      "common": {
        "name": "Information"
      },
      "native": {}
    },
    {
      "_id": "info.connection",
      "type": "state",
      "common": {
        "role": "indicator.connected",
        "name": "If connected to cloud",
        "type": "boolean",
        "read": true,
        "write": false,
        "def": false
      },
      "native": {}
    },
    {
      "_id": "info.ackTempPassword",
      "type": "state",
      "common": {
        "role": "indicator",
        "name": "If user have read about temp password for iot",
        "type": "boolean",
        "read": true,
        "write": false,
        "def": false
      },
      "native": {}
    },
    {
      "_id": "info.remoteTill",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Time till pro access is available",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.lastFunction",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last controlled function",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.lastRoom",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last controlled room",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.lastCommand",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last command",
        "type": "mixed",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.lastCommandObj",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last command as object",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.lastResponse",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last textual response",
        "type": "string",
        "read": true,
        "write": true
      },
      "native": {}
    },
    {
      "_id": "smart.lastObjectID",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Last accessed object id",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.updates",
      "type": "state",
      "common": {
        "role": "state",
        "name": "If updates of configuration is ready",
        "type": "boolean",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.updates3",
      "type": "state",
      "common": {
        "role": "state",
        "name": "If updates of V3 configuration is ready",
        "type": "boolean",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.updatesGH",
      "type": "state",
      "common": {
        "role": "state",
        "name": "If updates of google home configuration is ready",
        "type": "boolean",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.updatesYA",
      "type": "state",
      "common": {
        "role": "state",
        "name": "If updates of yandex alice configuration is ready",
        "type": "boolean",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "smart.updatesResult",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Result for last devices update",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "services",
      "type": "channel",
      "common": {
        "name": "Information"
      },
      "native": {}
    },
    {
      "_id": "certs",
      "type": "channel",
      "common": {
        "expert": true,
        "name": "Certificates"
      },
      "native": {}
    },
    {
      "_id": "certs.id",
      "type": "state",
      "common": {
        "expert": true,
        "role": "state",
        "name": "Certificate ID",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "certs.public",
      "type": "state",
      "common": {
        "expert": true,
        "role": "state",
        "name": "Public key",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "certs.private",
      "type": "state",
      "common": {
        "expert": true,
        "role": "state",
        "name": "Private key",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "certs.certificate",
      "type": "state",
      "common": {
        "expert": true,
        "role": "state",
        "name": "Certificate",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "certs.urlKey",
      "type": "state",
      "common": {
        "role": "state",
        "name": "URL Key",
        "desc": "Used for access this instance via URL",
        "type": "string",
        "read": true,
        "write": false
      },
      "native": {}
    },
    {
      "_id": "certs.forceUserCreate",
      "type": "state",
      "common": {
        "role": "state",
        "name": "Force user creation",
        "desc": "Used to recreate the user and device anew",
        "def": false,
        "type": "boolean",
        "read": true,
        "write": true
      },
      "native": {}
    }
  ]
}
